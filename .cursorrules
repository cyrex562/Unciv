# Cursor Rules for Unciv to Rust Port

[project]
name = "Unciv Rust Port"
language = "rust"
source_language = "kotlin"
track_changes = true

[folders]
# Source Kotlin files (original project)
source = "orig_src"

# Destination Rust project directory
destination = "rust_port"

# Where to put markdown logs of actions
log = "conversion-logs"

[rules]

# Automatically convert Kotlin to Rust
[[rules.convert]]
from = "orig_src/**/*.kt"
to = "rust_port/src/**/*.rs"
action = "convert"

# Ignore generated files
[[rules.ignore]]
pattern = "**/build/**"

[[rules.ignore]]
pattern = "**/*.class"

# Mark known manual rewrite zones
# [[rules.manual]]
# pattern = "**/serializer/**/*.kt"
# reason = "Serialization logic requires manual mapping to serde"

# [[rules.manual]]
# pattern = "**/android/**"
# reason = "Platform-specific UI logic not applicable in Rust, use Bevy/egui/etc."

# [[rules.manual]]
# pattern = "**/reflection/**"
# reason = "Kotlin reflection not directly portable â€“ requires Rust trait-based redesign"

# Track integration checkpoints
[[rules.note]]
pattern = "**/*.rs"
message = "Verify module integration and trait implementations post-port"

[logging]
enabled = true
file = "conversion-logs/conversion-actions.md"
format = "<#>, <path/to/src/file>, <path/to/dst/file>"
