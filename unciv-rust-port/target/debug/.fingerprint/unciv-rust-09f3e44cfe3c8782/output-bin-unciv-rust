{"$message_type":"diagnostic","message":"invalid `struct` delimiters or `fn` call arguments","code":null,"level":"error","spans":[{"file_name":"src/map/mapgenerator/mapregions/start_normalizer.rs","byte_start":14196,"byte_end":14256,"line_start":321,"line_end":321,"column_start":17,"column_end":77,"is_primary":true,"text":[{"text":"                StateForConditionals::new(attacked_tile: Some(plot.clone()))","highlight_start":17,"highlight_end":77}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if `StateForConditionals::new` is a struct, use braces as delimiters","code":null,"level":"help","spans":[{"file_name":"src/map/mapgenerator/mapregions/start_normalizer.rs","byte_start":14221,"byte_end":14222,"line_start":321,"line_end":321,"column_start":42,"column_end":43,"is_primary":true,"text":[{"text":"                StateForConditionals::new(attacked_tile: Some(plot.clone()))","highlight_start":42,"highlight_end":43}],"label":null,"suggested_replacement":" { ","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/map/mapgenerator/mapregions/start_normalizer.rs","byte_start":14255,"byte_end":14256,"line_start":321,"line_end":321,"column_start":76,"column_end":77,"is_primary":true,"text":[{"text":"                StateForConditionals::new(attacked_tile: Some(plot.clone()))","highlight_start":76,"highlight_end":77}],"label":null,"suggested_replacement":" }","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if `StateForConditionals::new` is a function, use the arguments directly","code":null,"level":"help","spans":[{"file_name":"src/map/mapgenerator/mapregions/start_normalizer.rs","byte_start":14222,"byte_end":14237,"line_start":321,"line_end":321,"column_start":43,"column_end":58,"is_primary":true,"text":[{"text":"                StateForConditionals::new(attacked_tile: Some(plot.clone()))","highlight_start":43,"highlight_end":58}],"label":null,"suggested_replacement":"","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: invalid `struct` delimiters or `fn` call arguments\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/map/mapgenerator/mapregions/start_normalizer.rs:321:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m321\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                StateForConditionals::new(attacked_tile: Some(plot.clone()))\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if `StateForConditionals::new` is a struct, use braces as delimiters\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m321\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m                StateForConditionals::new\u001b[0m\u001b[0m\u001b[38;5;9m(\u001b[0m\u001b[0mattacked_tile: Some(plot.clone())\u001b[0m\u001b[0m\u001b[38;5;9m)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m321\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m                StateForConditionals::new\u001b[0m\u001b[0m\u001b[38;5;10m { \u001b[0m\u001b[0mattacked_tile: Some(plot.clone())\u001b[0m\u001b[0m\u001b[38;5;10m }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if `StateForConditionals::new` is a function, use the arguments directly\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m321\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m                StateForConditionals::new(\u001b[0m\u001b[0m\u001b[38;5;9mattacked_tile: \u001b[0m\u001b[0mSome(plot.clone()))\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m321\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m                StateForConditionals::new(Some(plot.clone()))\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"expected one of `(`, `)`, `,`, `.`, `::`, `?`, or an operator, found keyword `in`","code":null,"level":"error","spans":[{"file_name":"src/map/mapgenerator/mapregions/start_normalizer.rs","byte_start":16963,"byte_end":16965,"line_start":382,"line_end":382,"column_start":51,"column_end":53,"is_primary":true,"text":[{"text":"                           tile.last_terrain.name in i.terrains_can_be_built_on)","highlight_start":51,"highlight_end":53}],"label":"expected one of 7 possible tokens","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/map/mapgenerator/mapregions/start_normalizer.rs","byte_start":16753,"byte_end":16756,"line_start":379,"line_end":379,"column_start":18,"column_end":21,"is_primary":false,"text":[{"text":"            .map(|r| r.tile_improvements.values()","highlight_start":18,"highlight_end":21}],"label":"while parsing the body of this closure","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"you might have meant to open the body of the closure","code":null,"level":"help","spans":[{"file_name":"src/map/mapgenerator/mapregions/start_normalizer.rs","byte_start":16756,"byte_end":16756,"line_start":379,"line_end":379,"column_start":21,"column_end":21,"is_primary":true,"text":[{"text":"            .map(|r| r.tile_improvements.values()","highlight_start":21,"highlight_end":21}],"label":null,"suggested_replacement":" {","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/map/mapgenerator/mapregions/start_normalizer.rs","byte_start":16992,"byte_end":16992,"line_start":382,"line_end":382,"column_start":80,"column_end":80,"is_primary":true,"text":[{"text":"                           tile.last_terrain.name in i.terrains_can_be_built_on)","highlight_start":80,"highlight_end":80}],"label":null,"suggested_replacement":"}","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: expected one of `(`, `)`, `,`, `.`, `::`, `?`, or an operator, found keyword `in`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/map/mapgenerator/mapregions/start_normalizer.rs:382:51\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m379\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            .map(|r| r.tile_improvements.values()\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mwhile parsing the body of this closure\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m382\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                           tile.last_terrain.name in i.terrains_can_be_built_on)\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected one of 7 possible tokens\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: you might have meant to open the body of the closure\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m379\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m~ \u001b[0m\u001b[0m            .map(|r|\u001b[0m\u001b[0m\u001b[38;5;10m {\u001b[0m\u001b[0m r.tile_improvements.values()\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m380\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                 .filter(|i| !i.has_unique(UniqueType::GreatImprovement) &&\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m381\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                            i.unique_to.is_none() &&\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m382\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m~ \u001b[0m\u001b[0m                           tile.last_terrain.name in i.terrains_can_be_built_on\u001b[0m\u001b[0m\u001b[38;5;10m}\u001b[0m\u001b[0m)\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"expected one of `.`, `;`, `?`, `else`, or an operator, found `)`","code":null,"level":"error","spans":[{"file_name":"src/map/mapgenerator/mapregions/start_normalizer.rs","byte_start":17082,"byte_end":17083,"line_start":385,"line_end":385,"column_start":32,"column_end":33,"is_primary":true,"text":[{"text":"                .unwrap_or(0.0))","highlight_start":32,"highlight_end":33}],"label":"expected one of `.`, `;`, `?`, `else`, or an operator","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: expected one of `.`, `;`, `?`, `else`, or an operator, found `)`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/map/mapgenerator/mapregions/start_normalizer.rs:385:32\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m385\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                .unwrap_or(0.0))\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected one of `.`, `;`, `?`, `else`, or an operator\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"enum is not supported in `trait`s or `impl`s","code":null,"level":"error","spans":[{"file_name":"src/map/mapgenerator/river_generator.rs","byte_start":7536,"byte_end":7558,"line_start":211,"line_end":211,"column_start":5,"column_end":27,"is_primary":true,"text":[{"text":"    enum BottomRightOrLeft {","highlight_start":5,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider moving the enum out to a nearby module scope","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: enum is not supported in `trait`s or `impl`s\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/map/mapgenerator/river_generator.rs:211:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m211\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    enum BottomRightOrLeft {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider moving the enum out to a nearby module scope\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"invalid `struct` delimiters or `fn` call arguments","code":null,"level":"error","spans":[{"file_name":"src/map/mapgenerator/resourceplacement/luxury_resource_placement_logic.rs","byte_start":3281,"byte_end":3336,"line_start":76,"line_end":76,"column_start":38,"column_end":93,"is_primary":true,"text":[{"text":"            let region_conditional = StateForConditionals::new(region: Some(region.clone()));","highlight_start":38,"highlight_end":93}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if `StateForConditionals::new` is a struct, use braces as delimiters","code":null,"level":"help","spans":[{"file_name":"src/map/mapgenerator/resourceplacement/luxury_resource_placement_logic.rs","byte_start":3306,"byte_end":3307,"line_start":76,"line_end":76,"column_start":63,"column_end":64,"is_primary":true,"text":[{"text":"            let region_conditional = StateForConditionals::new(region: Some(region.clone()));","highlight_start":63,"highlight_end":64}],"label":null,"suggested_replacement":" { ","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/map/mapgenerator/resourceplacement/luxury_resource_placement_logic.rs","byte_start":3335,"byte_end":3336,"line_start":76,"line_end":76,"column_start":92,"column_end":93,"is_primary":true,"text":[{"text":"            let region_conditional = StateForConditionals::new(region: Some(region.clone()));","highlight_start":92,"highlight_end":93}],"label":null,"suggested_replacement":" }","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if `StateForConditionals::new` is a function, use the arguments directly","code":null,"level":"help","spans":[{"file_name":"src/map/mapgenerator/resourceplacement/luxury_resource_placement_logic.rs","byte_start":3307,"byte_end":3315,"line_start":76,"line_end":76,"column_start":64,"column_end":72,"is_primary":true,"text":[{"text":"            let region_conditional = StateForConditionals::new(region: Some(region.clone()));","highlight_start":64,"highlight_end":72}],"label":null,"suggested_replacement":"","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: invalid `struct` delimiters or `fn` call arguments\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/map/mapgenerator/resourceplacement/luxury_resource_placement_logic.rs:76:38\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m76\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            let region_conditional = StateForConditionals::new(region: Some(region.clone()));\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if `StateForConditionals::new` is a struct, use braces as delimiters\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m76\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m            let region_conditional = StateForConditionals::new\u001b[0m\u001b[0m\u001b[38;5;9m(\u001b[0m\u001b[0mregion: Some(region.clone())\u001b[0m\u001b[0m\u001b[38;5;9m)\u001b[0m\u001b[0m;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m76\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m            let region_conditional = StateForConditionals::new\u001b[0m\u001b[0m\u001b[38;5;10m { \u001b[0m\u001b[0mregion: Some(region.clone())\u001b[0m\u001b[0m\u001b[38;5;10m }\u001b[0m\u001b[0m;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if `StateForConditionals::new` is a function, use the arguments directly\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m76\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m            let region_conditional = StateForConditionals::new(\u001b[0m\u001b[0m\u001b[38;5;9mregion: \u001b[0m\u001b[0mSome(region.clone()));\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m76\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m            let region_conditional = StateForConditionals::new(Some(region.clone()));\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"invalid `struct` delimiters or `fn` call arguments","code":null,"level":"error","spans":[{"file_name":"src/map/mapgenerator/resourceplacement/luxury_resource_placement_logic.rs","byte_start":5812,"byte_end":5867,"line_start":142,"line_end":142,"column_start":34,"column_end":89,"is_primary":true,"text":[{"text":"        let region_conditional = StateForConditionals::new(region: Some(region.clone()));","highlight_start":34,"highlight_end":89}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if `StateForConditionals::new` is a struct, use braces as delimiters","code":null,"level":"help","spans":[{"file_name":"src/map/mapgenerator/resourceplacement/luxury_resource_placement_logic.rs","byte_start":5837,"byte_end":5838,"line_start":142,"line_end":142,"column_start":59,"column_end":60,"is_primary":true,"text":[{"text":"        let region_conditional = StateForConditionals::new(region: Some(region.clone()));","highlight_start":59,"highlight_end":60}],"label":null,"suggested_replacement":" { ","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/map/mapgenerator/resourceplacement/luxury_resource_placement_logic.rs","byte_start":5866,"byte_end":5867,"line_start":142,"line_end":142,"column_start":88,"column_end":89,"is_primary":true,"text":[{"text":"        let region_conditional = StateForConditionals::new(region: Some(region.clone()));","highlight_start":88,"highlight_end":89}],"label":null,"suggested_replacement":" }","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if `StateForConditionals::new` is a function, use the arguments directly","code":null,"level":"help","spans":[{"file_name":"src/map/mapgenerator/resourceplacement/luxury_resource_placement_logic.rs","byte_start":5838,"byte_end":5846,"line_start":142,"line_end":142,"column_start":60,"column_end":68,"is_primary":true,"text":[{"text":"        let region_conditional = StateForConditionals::new(region: Some(region.clone()));","highlight_start":60,"highlight_end":68}],"label":null,"suggested_replacement":"","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: invalid `struct` delimiters or `fn` call arguments\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/map/mapgenerator/resourceplacement/luxury_resource_placement_logic.rs:142:34\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m142\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let region_conditional = StateForConditionals::new(region: Some(region.clone()));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if `StateForConditionals::new` is a struct, use braces as delimiters\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m142\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m        let region_conditional = StateForConditionals::new\u001b[0m\u001b[0m\u001b[38;5;9m(\u001b[0m\u001b[0mregion: Some(region.clone())\u001b[0m\u001b[0m\u001b[38;5;9m)\u001b[0m\u001b[0m;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m142\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m        let region_conditional = StateForConditionals::new\u001b[0m\u001b[0m\u001b[38;5;10m { \u001b[0m\u001b[0mregion: Some(region.clone())\u001b[0m\u001b[0m\u001b[38;5;10m }\u001b[0m\u001b[0m;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if `StateForConditionals::new` is a function, use the arguments directly\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m142\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m        let region_conditional = StateForConditionals::new(\u001b[0m\u001b[0m\u001b[38;5;9mregion: \u001b[0m\u001b[0mSome(region.clone()));\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m142\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m        let region_conditional = StateForConditionals::new(Some(region.clone()));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`<` is interpreted as a start of generic arguments for `f32`, not a comparison","code":null,"level":"error","spans":[{"file_name":"src/map/mapgenerator/resourceplacement/luxury_resource_placement_logic.rs","byte_start":21633,"byte_end":21634,"line_start":517,"line_end":517,"column_start":67,"column_end":68,"is_primary":true,"text":[{"text":"            if region.total_fertility / region.tiles.len() as f32 < average_fertility_density {","highlight_start":67,"highlight_end":68}],"label":"not interpreted as comparison","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/map/mapgenerator/resourceplacement/luxury_resource_placement_logic.rs","byte_start":21635,"byte_end":21662,"line_start":517,"line_end":517,"column_start":69,"column_end":96,"is_primary":false,"text":[{"text":"            if region.total_fertility / region.tiles.len() as f32 < average_fertility_density {","highlight_start":69,"highlight_end":96}],"label":"interpreted as generic arguments","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"try comparing the cast value","code":null,"level":"help","spans":[{"file_name":"src/map/mapgenerator/resourceplacement/luxury_resource_placement_logic.rs","byte_start":21607,"byte_end":21607,"line_start":517,"line_end":517,"column_start":41,"column_end":41,"is_primary":true,"text":[{"text":"            if region.total_fertility / region.tiles.len() as f32 < average_fertility_density {","highlight_start":41,"highlight_end":41}],"label":null,"suggested_replacement":"(","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/map/mapgenerator/resourceplacement/luxury_resource_placement_logic.rs","byte_start":21632,"byte_end":21632,"line_start":517,"line_end":517,"column_start":66,"column_end":66,"is_primary":true,"text":[{"text":"            if region.total_fertility / region.tiles.len() as f32 < average_fertility_density {","highlight_start":66,"highlight_end":66}],"label":null,"suggested_replacement":")","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: `<` is interpreted as a start of generic arguments for `f32`, not a comparison\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/map/mapgenerator/resourceplacement/luxury_resource_placement_logic.rs:517:67\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m517\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            if region.total_fertility / region.tiles.len() as f32 < average_fertility_density {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12minterpreted as generic arguments\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot interpreted as comparison\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: try comparing the cast value\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m517\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            if region.total_fertility / \u001b[0m\u001b[0m\u001b[38;5;10m(\u001b[0m\u001b[0mregion.tiles.len() as f32\u001b[0m\u001b[0m\u001b[38;5;10m)\u001b[0m\u001b[0m < average_fertility_density {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                         \u001b[0m\u001b[0m\u001b[38;5;10m+\u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[38;5;10m+\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"invalid `struct` delimiters or `fn` call arguments","code":null,"level":"error","spans":[{"file_name":"src/map/mapgenerator/resourceplacement/map_region_resources.rs","byte_start":1999,"byte_end":2067,"line_start":48,"line_end":48,"column_start":35,"column_end":103,"is_primary":true,"text":[{"text":"        let conditional_terrain = StateForConditionals::new(attacked_tile: tile_list.first().cloned());","highlight_start":35,"highlight_end":103}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if `StateForConditionals::new` is a struct, use braces as delimiters","code":null,"level":"help","spans":[{"file_name":"src/map/mapgenerator/resourceplacement/map_region_resources.rs","byte_start":2024,"byte_end":2025,"line_start":48,"line_end":48,"column_start":60,"column_end":61,"is_primary":true,"text":[{"text":"        let conditional_terrain = StateForConditionals::new(attacked_tile: tile_list.first().cloned());","highlight_start":60,"highlight_end":61}],"label":null,"suggested_replacement":" { ","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/map/mapgenerator/resourceplacement/map_region_resources.rs","byte_start":2066,"byte_end":2067,"line_start":48,"line_end":48,"column_start":102,"column_end":103,"is_primary":true,"text":[{"text":"        let conditional_terrain = StateForConditionals::new(attacked_tile: tile_list.first().cloned());","highlight_start":102,"highlight_end":103}],"label":null,"suggested_replacement":" }","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if `StateForConditionals::new` is a function, use the arguments directly","code":null,"level":"help","spans":[{"file_name":"src/map/mapgenerator/resourceplacement/map_region_resources.rs","byte_start":2025,"byte_end":2040,"line_start":48,"line_end":48,"column_start":61,"column_end":76,"is_primary":true,"text":[{"text":"        let conditional_terrain = StateForConditionals::new(attacked_tile: tile_list.first().cloned());","highlight_start":61,"highlight_end":76}],"label":null,"suggested_replacement":"","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: invalid `struct` delimiters or `fn` call arguments\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/map/mapgenerator/resourceplacement/map_region_resources.rs:48:35\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m48\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let conditional_terrain = StateForConditionals::new(attacked_tile: tile_list.first().cloned());\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if `StateForConditionals::new` is a struct, use braces as delimiters\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m48\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m        let conditional_terrain = StateForConditionals::new\u001b[0m\u001b[0m\u001b[38;5;9m(\u001b[0m\u001b[0mattacked_tile: tile_list.first().cloned()\u001b[0m\u001b[0m\u001b[38;5;9m)\u001b[0m\u001b[0m;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m48\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m        let conditional_terrain = StateForConditionals::new\u001b[0m\u001b[0m\u001b[38;5;10m { \u001b[0m\u001b[0mattacked_tile: tile_list.first().cloned()\u001b[0m\u001b[0m\u001b[38;5;10m }\u001b[0m\u001b[0m;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if `StateForConditionals::new` is a function, use the arguments directly\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m48\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m        let conditional_terrain = StateForConditionals::new(\u001b[0m\u001b[0m\u001b[38;5;9mattacked_tile: \u001b[0m\u001b[0mtile_list.first().cloned());\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m48\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m        let conditional_terrain = StateForConditionals::new(tile_list.first().cloned());\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"invalid `struct` delimiters or `fn` call arguments","code":null,"level":"error","spans":[{"file_name":"src/map/mapgenerator/resourceplacement/strategic_bonus_resource_placement_logic.rs","byte_start":3783,"byte_end":3955,"line_start":72,"line_end":75,"column_start":39,"column_end":14,"is_primary":true,"text":[{"text":"            let terrain_conditional = StateForConditionals::new(","highlight_start":39,"highlight_end":65},{"text":"                attacked_tile: Some(tile.clone()),","highlight_start":1,"highlight_end":51},{"text":"                region: regions.iter().find(|r| r.tiles.contains(tile)).cloned()","highlight_start":1,"highlight_end":81},{"text":"            );","highlight_start":1,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if `StateForConditionals::new` is a struct, use braces as delimiters","code":null,"level":"help","spans":[{"file_name":"src/map/mapgenerator/resourceplacement/strategic_bonus_resource_placement_logic.rs","byte_start":3808,"byte_end":3809,"line_start":72,"line_end":72,"column_start":64,"column_end":65,"is_primary":true,"text":[{"text":"            let terrain_conditional = StateForConditionals::new(","highlight_start":64,"highlight_end":65}],"label":null,"suggested_replacement":" { ","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/map/mapgenerator/resourceplacement/strategic_bonus_resource_placement_logic.rs","byte_start":3954,"byte_end":3955,"line_start":75,"line_end":75,"column_start":13,"column_end":14,"is_primary":true,"text":[{"text":"            );","highlight_start":13,"highlight_end":14}],"label":null,"suggested_replacement":" }","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if `StateForConditionals::new` is a function, use the arguments directly","code":null,"level":"help","spans":[{"file_name":"src/map/mapgenerator/resourceplacement/strategic_bonus_resource_placement_logic.rs","byte_start":3826,"byte_end":3841,"line_start":73,"line_end":73,"column_start":17,"column_end":32,"is_primary":true,"text":[{"text":"                attacked_tile: Some(tile.clone()),","highlight_start":17,"highlight_end":32}],"label":null,"suggested_replacement":"","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/map/mapgenerator/resourceplacement/strategic_bonus_resource_placement_logic.rs","byte_start":3877,"byte_end":3885,"line_start":74,"line_end":74,"column_start":17,"column_end":25,"is_primary":true,"text":[{"text":"                region: regions.iter().find(|r| r.tiles.contains(tile)).cloned()","highlight_start":17,"highlight_end":25}],"label":null,"suggested_replacement":"","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: invalid `struct` delimiters or `fn` call arguments\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/map/mapgenerator/resourceplacement/strategic_bonus_resource_placement_logic.rs:72:39\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m72\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m            let terrain_conditional = StateForConditionals::new(\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m _______________________________________^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m73\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                attacked_tile: Some(tile.clone()),\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m74\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                region: regions.iter().find(|r| r.tiles.contains(tile)).cloned()\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m75\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            );\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_____________^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if `StateForConditionals::new` is a struct, use braces as delimiters\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m72\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m~ \u001b[0m\u001b[0m            let terrain_conditional = StateForConditionals::new\u001b[0m\u001b[0m\u001b[38;5;10m { \u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m73\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                 attacked_tile: Some(tile.clone()),\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m74\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                 region: regions.iter().find(|r| r.tiles.contains(tile)).cloned()\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m75\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m~ \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[38;5;10m }\u001b[0m\u001b[0m;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if `StateForConditionals::new` is a function, use the arguments directly\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m73\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m~ \u001b[0m\u001b[0m                Some(tile.clone()),\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m74\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m~ \u001b[0m\u001b[0m                regions.iter().find(|r| r.tiles.contains(tile)).cloned()\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"invalid `struct` delimiters or `fn` call arguments","code":null,"level":"error","spans":[{"file_name":"src/map/mapgenerator/resourceplacement/strategic_bonus_resource_placement_logic.rs","byte_start":15867,"byte_end":15927,"line_start":354,"line_end":354,"column_start":39,"column_end":99,"is_primary":true,"text":[{"text":"            let conditional_terrain = StateForConditionals::new(attacked_tile: Some(tile.clone()));","highlight_start":39,"highlight_end":99}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if `StateForConditionals::new` is a struct, use braces as delimiters","code":null,"level":"help","spans":[{"file_name":"src/map/mapgenerator/resourceplacement/strategic_bonus_resource_placement_logic.rs","byte_start":15892,"byte_end":15893,"line_start":354,"line_end":354,"column_start":64,"column_end":65,"is_primary":true,"text":[{"text":"            let conditional_terrain = StateForConditionals::new(attacked_tile: Some(tile.clone()));","highlight_start":64,"highlight_end":65}],"label":null,"suggested_replacement":" { ","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/map/mapgenerator/resourceplacement/strategic_bonus_resource_placement_logic.rs","byte_start":15926,"byte_end":15927,"line_start":354,"line_end":354,"column_start":98,"column_end":99,"is_primary":true,"text":[{"text":"            let conditional_terrain = StateForConditionals::new(attacked_tile: Some(tile.clone()));","highlight_start":98,"highlight_end":99}],"label":null,"suggested_replacement":" }","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if `StateForConditionals::new` is a function, use the arguments directly","code":null,"level":"help","spans":[{"file_name":"src/map/mapgenerator/resourceplacement/strategic_bonus_resource_placement_logic.rs","byte_start":15893,"byte_end":15908,"line_start":354,"line_end":354,"column_start":65,"column_end":80,"is_primary":true,"text":[{"text":"            let conditional_terrain = StateForConditionals::new(attacked_tile: Some(tile.clone()));","highlight_start":65,"highlight_end":80}],"label":null,"suggested_replacement":"","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: invalid `struct` delimiters or `fn` call arguments\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/map/mapgenerator/resourceplacement/strategic_bonus_resource_placement_logic.rs:354:39\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m354\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            let conditional_terrain = StateForConditionals::new(attacked_tile: Some(tile.clone()));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if `StateForConditionals::new` is a struct, use braces as delimiters\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m354\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m            let conditional_terrain = StateForConditionals::new\u001b[0m\u001b[0m\u001b[38;5;9m(\u001b[0m\u001b[0mattacked_tile: Some(tile.clone())\u001b[0m\u001b[0m\u001b[38;5;9m)\u001b[0m\u001b[0m;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m354\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m            let conditional_terrain = StateForConditionals::new\u001b[0m\u001b[0m\u001b[38;5;10m { \u001b[0m\u001b[0mattacked_tile: Some(tile.clone())\u001b[0m\u001b[0m\u001b[38;5;10m }\u001b[0m\u001b[0m;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if `StateForConditionals::new` is a function, use the arguments directly\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m354\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m            let conditional_terrain = StateForConditionals::new(\u001b[0m\u001b[0m\u001b[38;5;9mattacked_tile: \u001b[0m\u001b[0mSome(tile.clone()));\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m354\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m            let conditional_terrain = StateForConditionals::new(Some(tile.clone()));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"file not found for module `head_towards_improvement_automation`","code":{"code":"E0583","explanation":"A file wasn't found for an out-of-line module.\n\nErroneous code example:\n\n```compile_fail,E0583\nmod file_that_doesnt_exist; // error: file not found for module\n\nfn main() {}\n```\n\nPlease be sure that a file corresponding to the module exists. If you\nwant to use a module named `file_that_doesnt_exist`, you need to have a file\nnamed `file_that_doesnt_exist.rs` or `file_that_doesnt_exist/mod.rs` in the\nsame directory.\n"},"level":"error","spans":[{"file_name":"src/automation/unit/mod.rs","byte_start":195,"byte_end":239,"line_start":7,"line_end":7,"column_start":1,"column_end":45,"is_primary":true,"text":[{"text":"pub mod head_towards_improvement_automation;","highlight_start":1,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"to create the module `head_towards_improvement_automation`, create file \"src/automation/unit/head_towards_improvement_automation.rs\" or \"src/automation/unit/head_towards_improvement_automation/mod.rs\"","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"if there is a `mod head_towards_improvement_automation` elsewhere in the crate already, import it with `use crate::...` instead","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0583]\u001b[0m\u001b[0m\u001b[1m: file not found for module `head_towards_improvement_automation`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/automation/unit/mod.rs:7:1\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m7\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub mod head_towards_improvement_automation;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: to create the module `head_towards_improvement_automation`, create file \"src/automation/unit/head_towards_improvement_automation.rs\" or \"src/automation/unit/head_towards_improvement_automation/mod.rs\"\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: if there is a `mod head_towards_improvement_automation` elsewhere in the crate already, import it with `use crate::...` instead\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"file not found for module `head_towards_resource_automation`","code":{"code":"E0583","explanation":"A file wasn't found for an out-of-line module.\n\nErroneous code example:\n\n```compile_fail,E0583\nmod file_that_doesnt_exist; // error: file not found for module\n\nfn main() {}\n```\n\nPlease be sure that a file corresponding to the module exists. If you\nwant to use a module named `file_that_doesnt_exist`, you need to have a file\nnamed `file_that_doesnt_exist.rs` or `file_that_doesnt_exist/mod.rs` in the\nsame directory.\n"},"level":"error","spans":[{"file_name":"src/automation/unit/mod.rs","byte_start":240,"byte_end":281,"line_start":8,"line_end":8,"column_start":1,"column_end":42,"is_primary":true,"text":[{"text":"pub mod head_towards_resource_automation;","highlight_start":1,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"to create the module `head_towards_resource_automation`, create file \"src/automation/unit/head_towards_resource_automation.rs\" or \"src/automation/unit/head_towards_resource_automation/mod.rs\"","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"if there is a `mod head_towards_resource_automation` elsewhere in the crate already, import it with `use crate::...` instead","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0583]\u001b[0m\u001b[0m\u001b[1m: file not found for module `head_towards_resource_automation`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/automation/unit/mod.rs:8:1\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub mod head_towards_resource_automation;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: to create the module `head_towards_resource_automation`, create file \"src/automation/unit/head_towards_resource_automation.rs\" or \"src/automation/unit/head_towards_resource_automation/mod.rs\"\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: if there is a `mod head_towards_resource_automation` elsewhere in the crate already, import it with `use crate::...` instead\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"file not found for module `head_towards_ruins_automation`","code":{"code":"E0583","explanation":"A file wasn't found for an out-of-line module.\n\nErroneous code example:\n\n```compile_fail,E0583\nmod file_that_doesnt_exist; // error: file not found for module\n\nfn main() {}\n```\n\nPlease be sure that a file corresponding to the module exists. If you\nwant to use a module named `file_that_doesnt_exist`, you need to have a file\nnamed `file_that_doesnt_exist.rs` or `file_that_doesnt_exist/mod.rs` in the\nsame directory.\n"},"level":"error","spans":[{"file_name":"src/automation/unit/mod.rs","byte_start":282,"byte_end":320,"line_start":9,"line_end":9,"column_start":1,"column_end":39,"is_primary":true,"text":[{"text":"pub mod head_towards_ruins_automation;","highlight_start":1,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"to create the module `head_towards_ruins_automation`, create file \"src/automation/unit/head_towards_ruins_automation.rs\" or \"src/automation/unit/head_towards_ruins_automation/mod.rs\"","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"if there is a `mod head_towards_ruins_automation` elsewhere in the crate already, import it with `use crate::...` instead","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0583]\u001b[0m\u001b[0m\u001b[1m: file not found for module `head_towards_ruins_automation`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/automation/unit/mod.rs:9:1\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m9\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub mod head_towards_ruins_automation;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: to create the module `head_towards_ruins_automation`, create file \"src/automation/unit/head_towards_ruins_automation.rs\" or \"src/automation/unit/head_towards_ruins_automation/mod.rs\"\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: if there is a `mod head_towards_ruins_automation` elsewhere in the crate already, import it with `use crate::...` instead\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"file not found for module `head_towards_settler_automation`","code":{"code":"E0583","explanation":"A file wasn't found for an out-of-line module.\n\nErroneous code example:\n\n```compile_fail,E0583\nmod file_that_doesnt_exist; // error: file not found for module\n\nfn main() {}\n```\n\nPlease be sure that a file corresponding to the module exists. If you\nwant to use a module named `file_that_doesnt_exist`, you need to have a file\nnamed `file_that_doesnt_exist.rs` or `file_that_doesnt_exist/mod.rs` in the\nsame directory.\n"},"level":"error","spans":[{"file_name":"src/automation/unit/mod.rs","byte_start":321,"byte_end":361,"line_start":10,"line_end":10,"column_start":1,"column_end":41,"is_primary":true,"text":[{"text":"pub mod head_towards_settler_automation;","highlight_start":1,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"to create the module `head_towards_settler_automation`, create file \"src/automation/unit/head_towards_settler_automation.rs\" or \"src/automation/unit/head_towards_settler_automation/mod.rs\"","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"if there is a `mod head_towards_settler_automation` elsewhere in the crate already, import it with `use crate::...` instead","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0583]\u001b[0m\u001b[0m\u001b[1m: file not found for module `head_towards_settler_automation`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/automation/unit/mod.rs:10:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub mod head_towards_settler_automation;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: to create the module `head_towards_settler_automation`, create file \"src/automation/unit/head_towards_settler_automation.rs\" or \"src/automation/unit/head_towards_settler_automation/mod.rs\"\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: if there is a `mod head_towards_settler_automation` elsewhere in the crate already, import it with `use crate::...` instead\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"file not found for module `head_towards_unit_automation`","code":{"code":"E0583","explanation":"A file wasn't found for an out-of-line module.\n\nErroneous code example:\n\n```compile_fail,E0583\nmod file_that_doesnt_exist; // error: file not found for module\n\nfn main() {}\n```\n\nPlease be sure that a file corresponding to the module exists. If you\nwant to use a module named `file_that_doesnt_exist`, you need to have a file\nnamed `file_that_doesnt_exist.rs` or `file_that_doesnt_exist/mod.rs` in the\nsame directory.\n"},"level":"error","spans":[{"file_name":"src/automation/unit/mod.rs","byte_start":362,"byte_end":399,"line_start":11,"line_end":11,"column_start":1,"column_end":38,"is_primary":true,"text":[{"text":"pub mod head_towards_unit_automation;","highlight_start":1,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"to create the module `head_towards_unit_automation`, create file \"src/automation/unit/head_towards_unit_automation.rs\" or \"src/automation/unit/head_towards_unit_automation/mod.rs\"","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"if there is a `mod head_towards_unit_automation` elsewhere in the crate already, import it with `use crate::...` instead","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0583]\u001b[0m\u001b[0m\u001b[1m: file not found for module `head_towards_unit_automation`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/automation/unit/mod.rs:11:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub mod head_towards_unit_automation;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: to create the module `head_towards_unit_automation`, create file \"src/automation/unit/head_towards_unit_automation.rs\" or \"src/automation/unit/head_towards_unit_automation/mod.rs\"\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: if there is a `mod head_towards_unit_automation` elsewhere in the crate already, import it with `use crate::...` instead\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"file not found for module `improvement_automation`","code":{"code":"E0583","explanation":"A file wasn't found for an out-of-line module.\n\nErroneous code example:\n\n```compile_fail,E0583\nmod file_that_doesnt_exist; // error: file not found for module\n\nfn main() {}\n```\n\nPlease be sure that a file corresponding to the module exists. If you\nwant to use a module named `file_that_doesnt_exist`, you need to have a file\nnamed `file_that_doesnt_exist.rs` or `file_that_doesnt_exist/mod.rs` in the\nsame directory.\n"},"level":"error","spans":[{"file_name":"src/automation/unit/mod.rs","byte_start":400,"byte_end":431,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":true,"text":[{"text":"pub mod improvement_automation;","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"to create the module `improvement_automation`, create file \"src/automation/unit/improvement_automation.rs\" or \"src/automation/unit/improvement_automation/mod.rs\"","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"if there is a `mod improvement_automation` elsewhere in the crate already, import it with `use crate::...` instead","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0583]\u001b[0m\u001b[0m\u001b[1m: file not found for module `improvement_automation`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/automation/unit/mod.rs:12:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m12\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub mod improvement_automation;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: to create the module `improvement_automation`, create file \"src/automation/unit/improvement_automation.rs\" or \"src/automation/unit/improvement_automation/mod.rs\"\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: if there is a `mod improvement_automation` elsewhere in the crate already, import it with `use crate::...` instead\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"expected identifier, found keyword `type`","code":null,"level":"error","spans":[{"file_name":"src/automation/automation.rs","byte_start":9163,"byte_end":9167,"line_start":239,"line_end":239,"column_start":37,"column_end":41,"is_primary":true,"text":[{"text":"            unit.is_melee() && unit.type.is_water_unit()","highlight_start":37,"highlight_end":41}],"label":"expected identifier, found keyword","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: expected identifier, found keyword `type`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/automation/automation.rs:239:37\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m239\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            unit.is_melee() && unit.type.is_water_unit()\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected identifier, found keyword\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"expected `{`, found keyword `in`","code":null,"level":"error","spans":[{"file_name":"src/automation/automation.rs","byte_start":14854,"byte_end":14856,"line_start":385,"line_end":385,"column_start":32,"column_end":34,"is_primary":true,"text":[{"text":"        if construction.name() in civ_info.game_info.space_resources {","highlight_start":32,"highlight_end":34}],"label":"expected `{`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the `if` expression is missing a block after this condition","code":null,"level":"note","spans":[{"file_name":"src/automation/automation.rs","byte_start":14834,"byte_end":14853,"line_start":385,"line_end":385,"column_start":12,"column_end":31,"is_primary":true,"text":[{"text":"        if construction.name() in civ_info.game_info.space_resources {","highlight_start":12,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: expected `{`, found keyword `in`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/automation/automation.rs:385:32\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m385\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        if construction.name() in civ_info.game_info.space_resources {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `{`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: the `if` expression is missing a block after this condition\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/automation/automation.rs:385:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m385\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        if construction.name() in civ_info.game_info.space_resources {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"expected identifier, found `:`","code":null,"level":"error","spans":[{"file_name":"src/battle/air_interception.rs","byte_start":9608,"byte_end":9609,"line_start":228,"line_end":228,"column_start":32,"column_end":33,"is_primary":true,"text":[{"text":"                their_combatant: defender,","highlight_start":32,"highlight_end":33}],"label":"expected identifier","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: expected identifier, found `:`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/battle/air_interception.rs:228:32\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m228\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                their_combatant: defender,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected identifier\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"expected `{`, found keyword `in`","code":null,"level":"error","spans":[{"file_name":"src/battle/air_interception.rs","byte_start":12567,"byte_end":12569,"line_start":306,"line_end":306,"column_start":42,"column_end":44,"is_primary":true,"text":[{"text":"        } else if interceptor.get_tile() in attacker.get_civ_info().viewable_tiles {","highlight_start":42,"highlight_end":44}],"label":"expected `{`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the `if` expression is missing a block after this condition","code":null,"level":"note","spans":[{"file_name":"src/battle/air_interception.rs","byte_start":12544,"byte_end":12566,"line_start":306,"line_end":306,"column_start":19,"column_end":41,"is_primary":true,"text":[{"text":"        } else if interceptor.get_tile() in attacker.get_civ_info().viewable_tiles {","highlight_start":19,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: expected `{`, found keyword `in`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/battle/air_interception.rs:306:42\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m306\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        } else if interceptor.get_tile() in attacker.get_civ_info().viewable_tiles {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `{`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: the `if` expression is missing a block after this condition\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/battle/air_interception.rs:306:19\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m306\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        } else if interceptor.get_tile() in attacker.get_civ_info().viewable_tiles {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"expected identifier, found `:`","code":null,"level":"error","spans":[{"file_name":"src/battle/battle_damage.rs","byte_start":2317,"byte_end":2318,"line_start":68,"line_end":68,"column_start":17,"column_end":18,"is_primary":true,"text":[{"text":"            city: combatant.as_any().downcast_ref::<CityCombatant>().map(|c| c.city.clone()),","highlight_start":17,"highlight_end":18}],"label":"expected identifier","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: expected identifier, found `:`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/battle/battle_damage.rs:68:17\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m68\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            city: combatant.as_any().downcast_ref::<CityCombatant>().map(|c| c.city.clone()),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected identifier\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"expected one of `!`, `)`, `,`, `.`, `::`, `?`, `{`, or an operator, found `:`","code":null,"level":"error","spans":[{"file_name":"src/battle/battle_damage.rs","byte_start":10107,"byte_end":10108,"line_start":237,"line_end":237,"column_start":47,"column_end":48,"is_primary":true,"text":[{"text":"                        check_civ_info_uniques: true,","highlight_start":47,"highlight_end":48}],"label":"expected one of 8 possible tokens","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: expected one of `!`, `)`, `,`, `.`, `::`, `?`, `{`, or an operator, found `:`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/battle/battle_damage.rs:237:47\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m237\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        check_civ_info_uniques: true,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected one of 8 possible tokens\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"expected one of `!`, `)`, `,`, `.`, `::`, `?`, `{`, or an operator, found `:`","code":null,"level":"error","spans":[{"file_name":"src/battle/battle_damage.rs","byte_start":14154,"byte_end":14155,"line_start":330,"line_end":330,"column_start":71,"column_end":72,"is_primary":true,"text":[{"text":"                let tile_defence_bonus = tile.get_defensive_bonus(unit: &map_unit_combatant.unit);","highlight_start":71,"highlight_end":72}],"label":"expected one of 8 possible tokens","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: expected one of `!`, `)`, `,`, `.`, `::`, `?`, `{`, or an operator, found `:`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/battle/battle_damage.rs:330:71\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m330\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                let tile_defence_bonus = tile.get_defensive_bonus(unit: &map_unit_combatant.unit);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected one of 8 possible tokens\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"expected one of `!`, `)`, `,`, `.`, `::`, `?`, `{`, or an operator, found `:`","code":null,"level":"error","spans":[{"file_name":"src/battle/battle_damage.rs","byte_start":15707,"byte_end":15708,"line_start":362,"line_end":362,"column_start":117,"column_end":118,"is_primary":true,"text":[{"text":"                .map_or(false, |c| c.unit.has_unique(UniqueType::NoDamagePenaltyWoundedUnits, check_civ_info_uniques: true)) {","highlight_start":117,"highlight_end":118}],"label":"expected one of 8 possible tokens","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/battle/battle_damage.rs","byte_start":15622,"byte_end":15625,"line_start":362,"line_end":362,"column_start":32,"column_end":35,"is_primary":false,"text":[{"text":"                .map_or(false, |c| c.unit.has_unique(UniqueType::NoDamagePenaltyWoundedUnits, check_civ_info_uniques: true)) {","highlight_start":32,"highlight_end":35}],"label":"while parsing the body of this closure","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"you might have meant to open the body of the closure","code":null,"level":"help","spans":[{"file_name":"src/battle/battle_damage.rs","byte_start":15625,"byte_end":15625,"line_start":362,"line_end":362,"column_start":35,"column_end":35,"is_primary":true,"text":[{"text":"                .map_or(false, |c| c.unit.has_unique(UniqueType::NoDamagePenaltyWoundedUnits, check_civ_info_uniques: true)) {","highlight_start":35,"highlight_end":35}],"label":null,"suggested_replacement":" {","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: expected one of `!`, `)`, `,`, `.`, `::`, `?`, `{`, or an operator, found `:`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/battle/battle_damage.rs:362:117\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m362\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                .map_or(false, |c| c.unit.has_unique(UniqueType::NoDamagePenaltyWoundedUnits, check_civ_info_uniques: true)) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mwhile parsing the body of this closure\u001b[0m\u001b[0m                                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected one of 8 possible tokens\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: you might have meant to open the body of the closure\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m362\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                .map_or(false, |c|\u001b[0m\u001b[0m\u001b[38;5;10m {\u001b[0m\u001b[0m c.unit.has_unique(UniqueType::NoDamagePenaltyWoundedUnits, check_civ_info_uniques: true)) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                    \u001b[0m\u001b[0m\u001b[38;5;10m+\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"expected identifier, found `:`","code":null,"level":"error","spans":[{"file_name":"src/battle/battle_unit_capture.rs","byte_start":1997,"byte_end":1998,"line_start":50,"line_end":50,"column_start":17,"column_end":18,"is_primary":true,"text":[{"text":"            unit: Some(map_unit_defender.unit.clone()),","highlight_start":17,"highlight_end":18}],"label":"expected identifier","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: expected identifier, found `:`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/battle/battle_unit_capture.rs:50:17\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m50\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            unit: Some(map_unit_defender.unit.clone()),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected identifier\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"expected identifier, found `:`","code":null,"level":"error","spans":[{"file_name":"src/battle/battle_unit_capture.rs","byte_start":4680,"byte_end":4681,"line_start":119,"line_end":119,"column_start":26,"column_end":27,"is_primary":true,"text":[{"text":"            our_combatant: Some(attacker.clone()),","highlight_start":26,"highlight_end":27}],"label":"expected identifier","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: expected identifier, found `:`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/battle/battle_unit_capture.rs:119:26\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m119\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            our_combatant: Some(attacker.clone()),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected identifier\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"expected identifier, found `:`","code":null,"level":"error","spans":[{"file_name":"src/battle/city_combatant.rs","byte_start":3003,"byte_end":3004,"line_start":75,"line_end":75,"column_start":17,"column_end":18,"is_primary":true,"text":[{"text":"            city: Some(self.city.clone()),","highlight_start":17,"highlight_end":18}],"label":"expected identifier","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: expected identifier, found `:`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/battle/city_combatant.rs:75:17\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m75\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            city: Some(self.city.clone()),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected identifier\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"expected one of `!`, `)`, `,`, `.`, `::`, `?`, `{`, or an operator, found `:`","code":null,"level":"error","spans":[{"file_name":"src/battle/city_combatant.rs","byte_start":4470,"byte_end":4471,"line_start":128,"line_end":128,"column_start":95,"column_end":96,"is_primary":true,"text":[{"text":"                f == \"City\" || f == Constants::ALL || self.city.matches_filter(f, multi_filter: false)","highlight_start":95,"highlight_end":96}],"label":"expected one of 8 possible tokens","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: expected one of `!`, `)`, `,`, `.`, `::`, `?`, `{`, or an operator, found `:`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/battle/city_combatant.rs:128:95\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m128\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                f == \"City\" || f == Constants::ALL || self.city.matches_filter(f, multi_filter: false)\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                                                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected one of 8 possible tokens\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"expected one of `!`, `)`, `,`, `.`, `::`, `?`, `{`, or an operator, found `:`","code":null,"level":"error","spans":[{"file_name":"src/battle/city_combatant.rs","byte_start":4616,"byte_end":4617,"line_start":131,"line_end":131,"column_start":106,"column_end":107,"is_primary":true,"text":[{"text":"            filter == \"City\" || filter == Constants::ALL || self.city.matches_filter(filter, multi_filter: false)","highlight_start":106,"highlight_end":107}],"label":"expected one of 8 possible tokens","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: expected one of `!`, `)`, `,`, `.`, `::`, `?`, `{`, or an operator, found `:`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/battle/city_combatant.rs:131:106\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m131\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            filter == \"City\" || filter == Constants::ALL || self.city.matches_filter(filter, multi_filter: false)\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                                                                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected one of 8 possible tokens\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"expected identifier, found `:`","code":null,"level":"error","spans":[{"file_name":"src/battle/great_general_implementation.rs","byte_start":2582,"byte_end":2583,"line_start":74,"line_end":74,"column_start":26,"column_end":27,"is_primary":true,"text":[{"text":"            our_combatant: Some(our_unit_combatant.clone()),","highlight_start":26,"highlight_end":27}],"label":"expected identifier","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: expected identifier, found `:`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/battle/great_general_implementation.rs:74:26\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m74\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            our_combatant: Some(our_unit_combatant.clone()),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected identifier\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"expected one of `!`, `)`, `,`, `.`, `::`, `?`, `{`, or an operator, found `:`","code":null,"level":"error","spans":[{"file_name":"src/battle/great_general_implementation.rs","byte_start":4022,"byte_end":4023,"line_start":102,"line_end":102,"column_start":101,"column_end":102,"is_primary":true,"text":[{"text":"        if unit.has_unique(UniqueType::GreatGeneralProvidesDoubleCombatBonus, check_civ_info_uniques: true)","highlight_start":101,"highlight_end":102}],"label":"expected one of 8 possible tokens","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: expected one of `!`, `)`, `,`, `.`, `::`, `?`, `{`, or an operator, found `:`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/battle/great_general_implementation.rs:102:101\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m102\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        if unit.has_unique(UniqueType::GreatGeneralProvidesDoubleCombatBonus, check_civ_info_uniques: true)\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                                                                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected one of 8 possible tokens\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"expected one of `!`, `)`, `,`, `.`, `::`, `?`, `{`, or an operator, found `:`","code":null,"level":"error","spans":[{"file_name":"src/battle/target_helper.rs","byte_start":3115,"byte_end":3116,"line_start":65,"line_end":65,"column_start":126,"column_end":127,"is_primary":true,"text":[{"text":"            } else if unit.base_unit.moves_like_air_units || unit.has_unique(UniqueType::IndirectFire, check_civ_info_uniques: true) {","highlight_start":126,"highlight_end":127}],"label":"expected one of 8 possible tokens","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: expected one of `!`, `)`, `,`, `.`, `::`, `?`, `{`, or an operator, found `:`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/battle/target_helper.rs:65:126\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m65\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            } else if unit.base_unit.moves_like_air_units || unit.has_unique(UniqueType::IndirectFire, check_civ_info_uniques: true) {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                                                                                              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected one of 8 possible tokens\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"invalid `struct` delimiters or `fn` call arguments","code":null,"level":"error","spans":[{"file_name":"src/battle/target_helper.rs","byte_start":8739,"byte_end":9068,"line_start":182,"line_end":188,"column_start":42,"column_end":14,"is_primary":true,"text":[{"text":"            let state_for_conditionals = StateForConditionals::new(","highlight_start":42,"highlight_end":68},{"text":"                unit: Some(map_unit_combatant.unit.clone()),","highlight_start":1,"highlight_end":61},{"text":"                tile: Some(tile.clone()),","highlight_start":1,"highlight_end":42},{"text":"                our_combatant: Some(map_unit_combatant.clone()),","highlight_start":1,"highlight_end":65},{"text":"                their_combatant: Some(tile_combatant.clone()),","highlight_start":1,"highlight_end":63},{"text":"                combat_action: Some(CombatAction::Attack)","highlight_start":1,"highlight_end":58},{"text":"            );","highlight_start":1,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if `StateForConditionals::new` is a struct, use braces as delimiters","code":null,"level":"help","spans":[{"file_name":"src/battle/target_helper.rs","byte_start":8764,"byte_end":8765,"line_start":182,"line_end":182,"column_start":67,"column_end":68,"is_primary":true,"text":[{"text":"            let state_for_conditionals = StateForConditionals::new(","highlight_start":67,"highlight_end":68}],"label":null,"suggested_replacement":" { ","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/battle/target_helper.rs","byte_start":9067,"byte_end":9068,"line_start":188,"line_end":188,"column_start":13,"column_end":14,"is_primary":true,"text":[{"text":"            );","highlight_start":13,"highlight_end":14}],"label":null,"suggested_replacement":" }","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if `StateForConditionals::new` is a function, use the arguments directly","code":null,"level":"help","spans":[{"file_name":"src/battle/target_helper.rs","byte_start":8782,"byte_end":8788,"line_start":183,"line_end":183,"column_start":17,"column_end":23,"is_primary":true,"text":[{"text":"                unit: Some(map_unit_combatant.unit.clone()),","highlight_start":17,"highlight_end":23}],"label":null,"suggested_replacement":"","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/battle/target_helper.rs","byte_start":8843,"byte_end":8849,"line_start":184,"line_end":184,"column_start":17,"column_end":23,"is_primary":true,"text":[{"text":"                tile: Some(tile.clone()),","highlight_start":17,"highlight_end":23}],"label":null,"suggested_replacement":"","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/battle/target_helper.rs","byte_start":8885,"byte_end":8900,"line_start":185,"line_end":185,"column_start":17,"column_end":32,"is_primary":true,"text":[{"text":"                our_combatant: Some(map_unit_combatant.clone()),","highlight_start":17,"highlight_end":32}],"label":null,"suggested_replacement":"","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/battle/target_helper.rs","byte_start":8950,"byte_end":8967,"line_start":186,"line_end":186,"column_start":17,"column_end":34,"is_primary":true,"text":[{"text":"                their_combatant: Some(tile_combatant.clone()),","highlight_start":17,"highlight_end":34}],"label":null,"suggested_replacement":"","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/battle/target_helper.rs","byte_start":9013,"byte_end":9028,"line_start":187,"line_end":187,"column_start":17,"column_end":32,"is_primary":true,"text":[{"text":"                combat_action: Some(CombatAction::Attack)","highlight_start":17,"highlight_end":32}],"label":null,"suggested_replacement":"","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: invalid `struct` delimiters or `fn` call arguments\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/battle/target_helper.rs:182:42\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m182\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m            let state_for_conditionals = StateForConditionals::new(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m __________________________________________^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m183\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                unit: Some(map_unit_combatant.unit.clone()),\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m184\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                tile: Some(tile.clone()),\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m185\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                our_combatant: Some(map_unit_combatant.clone()),\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m186\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                their_combatant: Some(tile_combatant.clone()),\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m187\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                combat_action: Some(CombatAction::Attack)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m188\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            );\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_____________^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if `StateForConditionals::new` is a struct, use braces as delimiters\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m182\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m~ \u001b[0m\u001b[0m            let state_for_conditionals = StateForConditionals::new\u001b[0m\u001b[0m\u001b[38;5;10m { \u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m183\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                 unit: Some(map_unit_combatant.unit.clone()),\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m187\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                 combat_action: Some(CombatAction::Attack)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m188\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m~ \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[38;5;10m }\u001b[0m\u001b[0m;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if `StateForConditionals::new` is a function, use the arguments directly\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m183\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m~ \u001b[0m\u001b[0m                Some(map_unit_combatant.unit.clone()),\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m184\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m~ \u001b[0m\u001b[0m                Some(tile.clone()),\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m185\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m~ \u001b[0m\u001b[0m                Some(map_unit_combatant.clone()),\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m186\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m~ \u001b[0m\u001b[0m                Some(tile_combatant.clone()),\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m187\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m~ \u001b[0m\u001b[0m                Some(CombatAction::Attack)\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"expected one of `:`, `@`, or `|`, found `)`","code":null,"level":"error","spans":[{"file_name":"src/city/city.rs","byte_start":20024,"byte_end":20025,"line_start":546,"line_end":546,"column_start":33,"column_end":34,"is_primary":true,"text":[{"text":"    pub fn reset_wltkd(&mut this) {","highlight_start":33,"highlight_end":34}],"label":"expected one of `:`, `@`, or `|`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"anonymous parameters are removed in the 2018 edition (see RFC 1685)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is a `self` type, give it a parameter name","code":null,"level":"help","spans":[{"file_name":"src/city/city.rs","byte_start":20015,"byte_end":20015,"line_start":546,"line_end":546,"column_start":24,"column_end":24,"is_primary":true,"text":[{"text":"    pub fn reset_wltkd(&mut this) {","highlight_start":24,"highlight_end":24}],"label":null,"suggested_replacement":"self: ","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if this is a parameter name, give it a type","code":null,"level":"help","spans":[{"file_name":"src/city/city.rs","byte_start":20015,"byte_end":20024,"line_start":546,"line_end":546,"column_start":24,"column_end":33,"is_primary":true,"text":[{"text":"    pub fn reset_wltkd(&mut this) {","highlight_start":24,"highlight_end":33}],"label":null,"suggested_replacement":"this: &mut TypeName","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null},{"message":"if this is a type, explicitly ignore the parameter name","code":null,"level":"help","spans":[{"file_name":"src/city/city.rs","byte_start":20015,"byte_end":20015,"line_start":546,"line_end":546,"column_start":24,"column_end":24,"is_primary":true,"text":[{"text":"    pub fn reset_wltkd(&mut this) {","highlight_start":24,"highlight_end":24}],"label":null,"suggested_replacement":"_: ","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: expected one of `:`, `@`, or `|`, found `)`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/city/city.rs:546:33\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m546\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn reset_wltkd(&mut this) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected one of `:`, `@`, or `|`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: anonymous parameters are removed in the 2018 edition (see RFC 1685)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a `self` type, give it a parameter name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m546\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub fn reset_wltkd(\u001b[0m\u001b[0m\u001b[38;5;10mself: \u001b[0m\u001b[0m&mut this) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[38;5;10m+++++\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a parameter name, give it a type\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m546\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m    pub fn reset_wltkd(\u001b[0m\u001b[0m\u001b[38;5;9m&mut this\u001b[0m\u001b[0m) {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m546\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m    pub fn reset_wltkd(\u001b[0m\u001b[0m\u001b[38;5;10mthis: &mut TypeName\u001b[0m\u001b[0m) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a type, explicitly ignore the parameter name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m546\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub fn reset_wltkd(\u001b[0m\u001b[0m\u001b[38;5;10m_: \u001b[0m\u001b[0m&mut this) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[38;5;10m++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"expected one of `:`, `@`, or `|`, found `)`","code":null,"level":"error","spans":[{"file_name":"src/city/city.rs","byte_start":20440,"byte_end":20441,"line_start":555,"line_end":555,"column_start":45,"column_end":46,"is_primary":true,"text":[{"text":"    pub fn reassign_all_population(&mut this) {","highlight_start":45,"highlight_end":46}],"label":"expected one of `:`, `@`, or `|`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"anonymous parameters are removed in the 2018 edition (see RFC 1685)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is a `self` type, give it a parameter name","code":null,"level":"help","spans":[{"file_name":"src/city/city.rs","byte_start":20431,"byte_end":20431,"line_start":555,"line_end":555,"column_start":36,"column_end":36,"is_primary":true,"text":[{"text":"    pub fn reassign_all_population(&mut this) {","highlight_start":36,"highlight_end":36}],"label":null,"suggested_replacement":"self: ","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if this is a parameter name, give it a type","code":null,"level":"help","spans":[{"file_name":"src/city/city.rs","byte_start":20431,"byte_end":20440,"line_start":555,"line_end":555,"column_start":36,"column_end":45,"is_primary":true,"text":[{"text":"    pub fn reassign_all_population(&mut this) {","highlight_start":36,"highlight_end":45}],"label":null,"suggested_replacement":"this: &mut TypeName","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null},{"message":"if this is a type, explicitly ignore the parameter name","code":null,"level":"help","spans":[{"file_name":"src/city/city.rs","byte_start":20431,"byte_end":20431,"line_start":555,"line_end":555,"column_start":36,"column_end":36,"is_primary":true,"text":[{"text":"    pub fn reassign_all_population(&mut this) {","highlight_start":36,"highlight_end":36}],"label":null,"suggested_replacement":"_: ","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: expected one of `:`, `@`, or `|`, found `)`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/city/city.rs:555:45\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m555\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn reassign_all_population(&mut this) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected one of `:`, `@`, or `|`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: anonymous parameters are removed in the 2018 edition (see RFC 1685)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a `self` type, give it a parameter name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m555\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub fn reassign_all_population(\u001b[0m\u001b[0m\u001b[38;5;10mself: \u001b[0m\u001b[0m&mut this) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                    \u001b[0m\u001b[0m\u001b[38;5;10m+++++\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a parameter name, give it a type\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m555\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m    pub fn reassign_all_population(\u001b[0m\u001b[0m\u001b[38;5;9m&mut this\u001b[0m\u001b[0m) {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m555\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m    pub fn reassign_all_population(\u001b[0m\u001b[0m\u001b[38;5;10mthis: &mut TypeName\u001b[0m\u001b[0m) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a type, explicitly ignore the parameter name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m555\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub fn reassign_all_population(\u001b[0m\u001b[0m\u001b[38;5;10m_: \u001b[0m\u001b[0m&mut this) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                    \u001b[0m\u001b[0m\u001b[38;5;10m++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"expected one of `:`, `@`, or `|`, found `,`","code":null,"level":"error","spans":[{"file_name":"src/city/city.rs","byte_start":20601,"byte_end":20602,"line_start":561,"line_end":561,"column_start":41,"column_end":42,"is_primary":true,"text":[{"text":"    pub fn reassign_population(&mut this, reset_locked: bool) {","highlight_start":41,"highlight_end":42}],"label":"expected one of `:`, `@`, or `|`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"anonymous parameters are removed in the 2018 edition (see RFC 1685)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is a `self` type, give it a parameter name","code":null,"level":"help","spans":[{"file_name":"src/city/city.rs","byte_start":20592,"byte_end":20592,"line_start":561,"line_end":561,"column_start":32,"column_end":32,"is_primary":true,"text":[{"text":"    pub fn reassign_population(&mut this, reset_locked: bool) {","highlight_start":32,"highlight_end":32}],"label":null,"suggested_replacement":"self: ","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if this is a parameter name, give it a type","code":null,"level":"help","spans":[{"file_name":"src/city/city.rs","byte_start":20592,"byte_end":20601,"line_start":561,"line_end":561,"column_start":32,"column_end":41,"is_primary":true,"text":[{"text":"    pub fn reassign_population(&mut this, reset_locked: bool) {","highlight_start":32,"highlight_end":41}],"label":null,"suggested_replacement":"this: &mut TypeName","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null},{"message":"if this is a type, explicitly ignore the parameter name","code":null,"level":"help","spans":[{"file_name":"src/city/city.rs","byte_start":20592,"byte_end":20592,"line_start":561,"line_end":561,"column_start":32,"column_end":32,"is_primary":true,"text":[{"text":"    pub fn reassign_population(&mut this, reset_locked: bool) {","highlight_start":32,"highlight_end":32}],"label":null,"suggested_replacement":"_: ","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: expected one of `:`, `@`, or `|`, found `,`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/city/city.rs:561:41\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m561\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn reassign_population(&mut this, reset_locked: bool) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected one of `:`, `@`, or `|`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: anonymous parameters are removed in the 2018 edition (see RFC 1685)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a `self` type, give it a parameter name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m561\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub fn reassign_population(\u001b[0m\u001b[0m\u001b[38;5;10mself: \u001b[0m\u001b[0m&mut this, reset_locked: bool) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[38;5;10m+++++\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a parameter name, give it a type\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m561\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m    pub fn reassign_population(\u001b[0m\u001b[0m\u001b[38;5;9m&mut this\u001b[0m\u001b[0m, reset_locked: bool) {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m561\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m    pub fn reassign_population(\u001b[0m\u001b[0m\u001b[38;5;10mthis: &mut TypeName\u001b[0m\u001b[0m, reset_locked: bool) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a type, explicitly ignore the parameter name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m561\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub fn reassign_population(\u001b[0m\u001b[0m\u001b[38;5;10m_: \u001b[0m\u001b[0m&mut this, reset_locked: bool) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[38;5;10m++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"expected one of `:`, `@`, or `|`, found `)`","code":null,"level":"error","spans":[{"file_name":"src/city/city.rs","byte_start":21189,"byte_end":21190,"line_start":576,"line_end":576,"column_start":50,"column_end":51,"is_primary":true,"text":[{"text":"    pub fn reassign_population_deferred(&mut this) {","highlight_start":50,"highlight_end":51}],"label":"expected one of `:`, `@`, or `|`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"anonymous parameters are removed in the 2018 edition (see RFC 1685)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is a `self` type, give it a parameter name","code":null,"level":"help","spans":[{"file_name":"src/city/city.rs","byte_start":21180,"byte_end":21180,"line_start":576,"line_end":576,"column_start":41,"column_end":41,"is_primary":true,"text":[{"text":"    pub fn reassign_population_deferred(&mut this) {","highlight_start":41,"highlight_end":41}],"label":null,"suggested_replacement":"self: ","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if this is a parameter name, give it a type","code":null,"level":"help","spans":[{"file_name":"src/city/city.rs","byte_start":21180,"byte_end":21189,"line_start":576,"line_end":576,"column_start":41,"column_end":50,"is_primary":true,"text":[{"text":"    pub fn reassign_population_deferred(&mut this) {","highlight_start":41,"highlight_end":50}],"label":null,"suggested_replacement":"this: &mut TypeName","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null},{"message":"if this is a type, explicitly ignore the parameter name","code":null,"level":"help","spans":[{"file_name":"src/city/city.rs","byte_start":21180,"byte_end":21180,"line_start":576,"line_end":576,"column_start":41,"column_end":41,"is_primary":true,"text":[{"text":"    pub fn reassign_population_deferred(&mut this) {","highlight_start":41,"highlight_end":41}],"label":null,"suggested_replacement":"_: ","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: expected one of `:`, `@`, or `|`, found `)`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/city/city.rs:576:50\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m576\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn reassign_population_deferred(&mut this) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected one of `:`, `@`, or `|`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: anonymous parameters are removed in the 2018 edition (see RFC 1685)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a `self` type, give it a parameter name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m576\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub fn reassign_population_deferred(\u001b[0m\u001b[0m\u001b[38;5;10mself: \u001b[0m\u001b[0m&mut this) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                         \u001b[0m\u001b[0m\u001b[38;5;10m+++++\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a parameter name, give it a type\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m576\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m    pub fn reassign_population_deferred(\u001b[0m\u001b[0m\u001b[38;5;9m&mut this\u001b[0m\u001b[0m) {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m576\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m    pub fn reassign_population_deferred(\u001b[0m\u001b[0m\u001b[38;5;10mthis: &mut TypeName\u001b[0m\u001b[0m) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a type, explicitly ignore the parameter name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m576\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub fn reassign_population_deferred(\u001b[0m\u001b[0m\u001b[38;5;10m_: \u001b[0m\u001b[0m&mut this) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                         \u001b[0m\u001b[0m\u001b[38;5;10m++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"expected one of `:`, `@`, or `|`, found `,`","code":null,"level":"error","spans":[{"file_name":"src/city/city.rs","byte_start":21592,"byte_end":21593,"line_start":586,"line_end":586,"column_start":34,"column_end":35,"is_primary":true,"text":[{"text":"    pub fn destroy_city(&mut this, override_safeties: bool) {","highlight_start":34,"highlight_end":35}],"label":"expected one of `:`, `@`, or `|`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"anonymous parameters are removed in the 2018 edition (see RFC 1685)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is a `self` type, give it a parameter name","code":null,"level":"help","spans":[{"file_name":"src/city/city.rs","byte_start":21583,"byte_end":21583,"line_start":586,"line_end":586,"column_start":25,"column_end":25,"is_primary":true,"text":[{"text":"    pub fn destroy_city(&mut this, override_safeties: bool) {","highlight_start":25,"highlight_end":25}],"label":null,"suggested_replacement":"self: ","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if this is a parameter name, give it a type","code":null,"level":"help","spans":[{"file_name":"src/city/city.rs","byte_start":21583,"byte_end":21592,"line_start":586,"line_end":586,"column_start":25,"column_end":34,"is_primary":true,"text":[{"text":"    pub fn destroy_city(&mut this, override_safeties: bool) {","highlight_start":25,"highlight_end":34}],"label":null,"suggested_replacement":"this: &mut TypeName","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null},{"message":"if this is a type, explicitly ignore the parameter name","code":null,"level":"help","spans":[{"file_name":"src/city/city.rs","byte_start":21583,"byte_end":21583,"line_start":586,"line_end":586,"column_start":25,"column_end":25,"is_primary":true,"text":[{"text":"    pub fn destroy_city(&mut this, override_safeties: bool) {","highlight_start":25,"highlight_end":25}],"label":null,"suggested_replacement":"_: ","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: expected one of `:`, `@`, or `|`, found `,`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/city/city.rs:586:34\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m586\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn destroy_city(&mut this, override_safeties: bool) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected one of `:`, `@`, or `|`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: anonymous parameters are removed in the 2018 edition (see RFC 1685)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a `self` type, give it a parameter name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m586\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub fn destroy_city(\u001b[0m\u001b[0m\u001b[38;5;10mself: \u001b[0m\u001b[0m&mut this, override_safeties: bool) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[38;5;10m+++++\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a parameter name, give it a type\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m586\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m    pub fn destroy_city(\u001b[0m\u001b[0m\u001b[38;5;9m&mut this\u001b[0m\u001b[0m, override_safeties: bool) {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m586\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m    pub fn destroy_city(\u001b[0m\u001b[0m\u001b[38;5;10mthis: &mut TypeName\u001b[0m\u001b[0m, override_safeties: bool) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a type, explicitly ignore the parameter name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m586\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub fn destroy_city(\u001b[0m\u001b[0m\u001b[38;5;10m_: \u001b[0m\u001b[0m&mut this, override_safeties: bool) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[38;5;10m++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"expected one of `:`, `@`, or `|`, found `)`","code":null,"level":"error","spans":[{"file_name":"src/city/city.rs","byte_start":24022,"byte_end":24023,"line_start":640,"line_end":640,"column_start":32,"column_end":33,"is_primary":true,"text":[{"text":"    pub fn annex_city(&mut this) {","highlight_start":32,"highlight_end":33}],"label":"expected one of `:`, `@`, or `|`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"anonymous parameters are removed in the 2018 edition (see RFC 1685)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is a `self` type, give it a parameter name","code":null,"level":"help","spans":[{"file_name":"src/city/city.rs","byte_start":24013,"byte_end":24013,"line_start":640,"line_end":640,"column_start":23,"column_end":23,"is_primary":true,"text":[{"text":"    pub fn annex_city(&mut this) {","highlight_start":23,"highlight_end":23}],"label":null,"suggested_replacement":"self: ","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if this is a parameter name, give it a type","code":null,"level":"help","spans":[{"file_name":"src/city/city.rs","byte_start":24013,"byte_end":24022,"line_start":640,"line_end":640,"column_start":23,"column_end":32,"is_primary":true,"text":[{"text":"    pub fn annex_city(&mut this) {","highlight_start":23,"highlight_end":32}],"label":null,"suggested_replacement":"this: &mut TypeName","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null},{"message":"if this is a type, explicitly ignore the parameter name","code":null,"level":"help","spans":[{"file_name":"src/city/city.rs","byte_start":24013,"byte_end":24013,"line_start":640,"line_end":640,"column_start":23,"column_end":23,"is_primary":true,"text":[{"text":"    pub fn annex_city(&mut this) {","highlight_start":23,"highlight_end":23}],"label":null,"suggested_replacement":"_: ","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: expected one of `:`, `@`, or `|`, found `)`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/city/city.rs:640:32\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m640\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn annex_city(&mut this) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected one of `:`, `@`, or `|`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: anonymous parameters are removed in the 2018 edition (see RFC 1685)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a `self` type, give it a parameter name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m640\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub fn annex_city(\u001b[0m\u001b[0m\u001b[38;5;10mself: \u001b[0m\u001b[0m&mut this) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[38;5;10m+++++\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a parameter name, give it a type\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m640\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m    pub fn annex_city(\u001b[0m\u001b[0m\u001b[38;5;9m&mut this\u001b[0m\u001b[0m) {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m640\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m    pub fn annex_city(\u001b[0m\u001b[0m\u001b[38;5;10mthis: &mut TypeName\u001b[0m\u001b[0m) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a type, explicitly ignore the parameter name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m640\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub fn annex_city(\u001b[0m\u001b[0m\u001b[38;5;10m_: \u001b[0m\u001b[0m&mut this) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[38;5;10m++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"expected one of `:`, `@`, or `|`, found `,`","code":null,"level":"error","spans":[{"file_name":"src/city/city.rs","byte_start":24163,"byte_end":24164,"line_start":645,"line_end":645,"column_start":33,"column_end":34,"is_primary":true,"text":[{"text":"    pub fn puppet_city(&mut this, conquering_civ: Arc<Civilization>) {","highlight_start":33,"highlight_end":34}],"label":"expected one of `:`, `@`, or `|`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"anonymous parameters are removed in the 2018 edition (see RFC 1685)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is a `self` type, give it a parameter name","code":null,"level":"help","spans":[{"file_name":"src/city/city.rs","byte_start":24154,"byte_end":24154,"line_start":645,"line_end":645,"column_start":24,"column_end":24,"is_primary":true,"text":[{"text":"    pub fn puppet_city(&mut this, conquering_civ: Arc<Civilization>) {","highlight_start":24,"highlight_end":24}],"label":null,"suggested_replacement":"self: ","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if this is a parameter name, give it a type","code":null,"level":"help","spans":[{"file_name":"src/city/city.rs","byte_start":24154,"byte_end":24163,"line_start":645,"line_end":645,"column_start":24,"column_end":33,"is_primary":true,"text":[{"text":"    pub fn puppet_city(&mut this, conquering_civ: Arc<Civilization>) {","highlight_start":24,"highlight_end":33}],"label":null,"suggested_replacement":"this: &mut TypeName","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null},{"message":"if this is a type, explicitly ignore the parameter name","code":null,"level":"help","spans":[{"file_name":"src/city/city.rs","byte_start":24154,"byte_end":24154,"line_start":645,"line_end":645,"column_start":24,"column_end":24,"is_primary":true,"text":[{"text":"    pub fn puppet_city(&mut this, conquering_civ: Arc<Civilization>) {","highlight_start":24,"highlight_end":24}],"label":null,"suggested_replacement":"_: ","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: expected one of `:`, `@`, or `|`, found `,`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/city/city.rs:645:33\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m645\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn puppet_city(&mut this, conquering_civ: Arc<Civilization>) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected one of `:`, `@`, or `|`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: anonymous parameters are removed in the 2018 edition (see RFC 1685)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a `self` type, give it a parameter name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m645\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub fn puppet_city(\u001b[0m\u001b[0m\u001b[38;5;10mself: \u001b[0m\u001b[0m&mut this, conquering_civ: Arc<Civilization>) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[38;5;10m+++++\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a parameter name, give it a type\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m645\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m    pub fn puppet_city(\u001b[0m\u001b[0m\u001b[38;5;9m&mut this\u001b[0m\u001b[0m, conquering_civ: Arc<Civilization>) {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m645\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m    pub fn puppet_city(\u001b[0m\u001b[0m\u001b[38;5;10mthis: &mut TypeName\u001b[0m\u001b[0m, conquering_civ: Arc<Civilization>) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a type, explicitly ignore the parameter name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m645\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub fn puppet_city(\u001b[0m\u001b[0m\u001b[38;5;10m_: \u001b[0m\u001b[0m&mut this, conquering_civ: Arc<Civilization>) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[38;5;10m++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"expected one of `:`, `@`, or `|`, found `,`","code":null,"level":"error","spans":[{"file_name":"src/city/city.rs","byte_start":24358,"byte_end":24359,"line_start":650,"line_end":650,"column_start":35,"column_end":36,"is_primary":true,"text":[{"text":"    pub fn liberate_city(&mut this, conquering_civ: Arc<Civilization>) {","highlight_start":35,"highlight_end":36}],"label":"expected one of `:`, `@`, or `|`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"anonymous parameters are removed in the 2018 edition (see RFC 1685)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is a `self` type, give it a parameter name","code":null,"level":"help","spans":[{"file_name":"src/city/city.rs","byte_start":24349,"byte_end":24349,"line_start":650,"line_end":650,"column_start":26,"column_end":26,"is_primary":true,"text":[{"text":"    pub fn liberate_city(&mut this, conquering_civ: Arc<Civilization>) {","highlight_start":26,"highlight_end":26}],"label":null,"suggested_replacement":"self: ","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if this is a parameter name, give it a type","code":null,"level":"help","spans":[{"file_name":"src/city/city.rs","byte_start":24349,"byte_end":24358,"line_start":650,"line_end":650,"column_start":26,"column_end":35,"is_primary":true,"text":[{"text":"    pub fn liberate_city(&mut this, conquering_civ: Arc<Civilization>) {","highlight_start":26,"highlight_end":35}],"label":null,"suggested_replacement":"this: &mut TypeName","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null},{"message":"if this is a type, explicitly ignore the parameter name","code":null,"level":"help","spans":[{"file_name":"src/city/city.rs","byte_start":24349,"byte_end":24349,"line_start":650,"line_end":650,"column_start":26,"column_end":26,"is_primary":true,"text":[{"text":"    pub fn liberate_city(&mut this, conquering_civ: Arc<Civilization>) {","highlight_start":26,"highlight_end":26}],"label":null,"suggested_replacement":"_: ","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: expected one of `:`, `@`, or `|`, found `,`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/city/city.rs:650:35\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m650\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn liberate_city(&mut this, conquering_civ: Arc<Civilization>) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected one of `:`, `@`, or `|`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: anonymous parameters are removed in the 2018 edition (see RFC 1685)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a `self` type, give it a parameter name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m650\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub fn liberate_city(\u001b[0m\u001b[0m\u001b[38;5;10mself: \u001b[0m\u001b[0m&mut this, conquering_civ: Arc<Civilization>) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[38;5;10m+++++\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a parameter name, give it a type\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m650\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m    pub fn liberate_city(\u001b[0m\u001b[0m\u001b[38;5;9m&mut this\u001b[0m\u001b[0m, conquering_civ: Arc<Civilization>) {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m650\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m    pub fn liberate_city(\u001b[0m\u001b[0m\u001b[38;5;10mthis: &mut TypeName\u001b[0m\u001b[0m, conquering_civ: Arc<Civilization>) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a type, explicitly ignore the parameter name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m650\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub fn liberate_city(\u001b[0m\u001b[0m\u001b[38;5;10m_: \u001b[0m\u001b[0m&mut this, conquering_civ: Arc<Civilization>) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[38;5;10m++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"expected one of `:`, `@`, or `|`, found `,`","code":null,"level":"error","spans":[{"file_name":"src/city/city.rs","byte_start":24567,"byte_end":24568,"line_start":655,"line_end":655,"column_start":33,"column_end":34,"is_primary":true,"text":[{"text":"    pub fn move_to_civ(&mut this, new_civ_info: Arc<Civilization>) {","highlight_start":33,"highlight_end":34}],"label":"expected one of `:`, `@`, or `|`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"anonymous parameters are removed in the 2018 edition (see RFC 1685)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is a `self` type, give it a parameter name","code":null,"level":"help","spans":[{"file_name":"src/city/city.rs","byte_start":24558,"byte_end":24558,"line_start":655,"line_end":655,"column_start":24,"column_end":24,"is_primary":true,"text":[{"text":"    pub fn move_to_civ(&mut this, new_civ_info: Arc<Civilization>) {","highlight_start":24,"highlight_end":24}],"label":null,"suggested_replacement":"self: ","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if this is a parameter name, give it a type","code":null,"level":"help","spans":[{"file_name":"src/city/city.rs","byte_start":24558,"byte_end":24567,"line_start":655,"line_end":655,"column_start":24,"column_end":33,"is_primary":true,"text":[{"text":"    pub fn move_to_civ(&mut this, new_civ_info: Arc<Civilization>) {","highlight_start":24,"highlight_end":33}],"label":null,"suggested_replacement":"this: &mut TypeName","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null},{"message":"if this is a type, explicitly ignore the parameter name","code":null,"level":"help","spans":[{"file_name":"src/city/city.rs","byte_start":24558,"byte_end":24558,"line_start":655,"line_end":655,"column_start":24,"column_end":24,"is_primary":true,"text":[{"text":"    pub fn move_to_civ(&mut this, new_civ_info: Arc<Civilization>) {","highlight_start":24,"highlight_end":24}],"label":null,"suggested_replacement":"_: ","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: expected one of `:`, `@`, or `|`, found `,`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/city/city.rs:655:33\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m655\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn move_to_civ(&mut this, new_civ_info: Arc<Civilization>) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected one of `:`, `@`, or `|`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: anonymous parameters are removed in the 2018 edition (see RFC 1685)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a `self` type, give it a parameter name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m655\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub fn move_to_civ(\u001b[0m\u001b[0m\u001b[38;5;10mself: \u001b[0m\u001b[0m&mut this, new_civ_info: Arc<Civilization>) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[38;5;10m+++++\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a parameter name, give it a type\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m655\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m    pub fn move_to_civ(\u001b[0m\u001b[0m\u001b[38;5;9m&mut this\u001b[0m\u001b[0m, new_civ_info: Arc<Civilization>) {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m655\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m    pub fn move_to_civ(\u001b[0m\u001b[0m\u001b[38;5;10mthis: &mut TypeName\u001b[0m\u001b[0m, new_civ_info: Arc<Civilization>) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a type, explicitly ignore the parameter name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m655\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub fn move_to_civ(\u001b[0m\u001b[0m\u001b[38;5;10m_: \u001b[0m\u001b[0m&mut this, new_civ_info: Arc<Civilization>) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[38;5;10m++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"expected one of `:`, `@`, or `|`, found `)`","code":null,"level":"error","spans":[{"file_name":"src/city/city.rs","byte_start":24776,"byte_end":24777,"line_start":660,"line_end":660,"column_start":44,"column_end":45,"is_primary":true,"text":[{"text":"    pub fn try_update_road_status(&mut this) {","highlight_start":44,"highlight_end":45}],"label":"expected one of `:`, `@`, or `|`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"anonymous parameters are removed in the 2018 edition (see RFC 1685)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is a `self` type, give it a parameter name","code":null,"level":"help","spans":[{"file_name":"src/city/city.rs","byte_start":24767,"byte_end":24767,"line_start":660,"line_end":660,"column_start":35,"column_end":35,"is_primary":true,"text":[{"text":"    pub fn try_update_road_status(&mut this) {","highlight_start":35,"highlight_end":35}],"label":null,"suggested_replacement":"self: ","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if this is a parameter name, give it a type","code":null,"level":"help","spans":[{"file_name":"src/city/city.rs","byte_start":24767,"byte_end":24776,"line_start":660,"line_end":660,"column_start":35,"column_end":44,"is_primary":true,"text":[{"text":"    pub fn try_update_road_status(&mut this) {","highlight_start":35,"highlight_end":44}],"label":null,"suggested_replacement":"this: &mut TypeName","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null},{"message":"if this is a type, explicitly ignore the parameter name","code":null,"level":"help","spans":[{"file_name":"src/city/city.rs","byte_start":24767,"byte_end":24767,"line_start":660,"line_end":660,"column_start":35,"column_end":35,"is_primary":true,"text":[{"text":"    pub fn try_update_road_status(&mut this) {","highlight_start":35,"highlight_end":35}],"label":null,"suggested_replacement":"_: ","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: expected one of `:`, `@`, or `|`, found `)`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/city/city.rs:660:44\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m660\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn try_update_road_status(&mut this) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected one of `:`, `@`, or `|`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: anonymous parameters are removed in the 2018 edition (see RFC 1685)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a `self` type, give it a parameter name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m660\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub fn try_update_road_status(\u001b[0m\u001b[0m\u001b[38;5;10mself: \u001b[0m\u001b[0m&mut this) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                   \u001b[0m\u001b[0m\u001b[38;5;10m+++++\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a parameter name, give it a type\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m660\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m    pub fn try_update_road_status(\u001b[0m\u001b[0m\u001b[38;5;9m&mut this\u001b[0m\u001b[0m) {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m660\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m    pub fn try_update_road_status(\u001b[0m\u001b[0m\u001b[38;5;10mthis: &mut TypeName\u001b[0m\u001b[0m) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a type, explicitly ignore the parameter name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m660\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub fn try_update_road_status(\u001b[0m\u001b[0m\u001b[38;5;10m_: \u001b[0m\u001b[0m&mut this) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                   \u001b[0m\u001b[0m\u001b[38;5;10m++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"expected one of `:`, `@`, or `|`, found `,`","code":null,"level":"error","spans":[{"file_name":"src/city/city.rs","byte_start":26194,"byte_end":26195,"line_start":696,"line_end":696,"column_start":35,"column_end":36,"is_primary":true,"text":[{"text":"    pub fn sell_building(&mut this, building_name: &str) {","highlight_start":35,"highlight_end":36}],"label":"expected one of `:`, `@`, or `|`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"anonymous parameters are removed in the 2018 edition (see RFC 1685)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is a `self` type, give it a parameter name","code":null,"level":"help","spans":[{"file_name":"src/city/city.rs","byte_start":26185,"byte_end":26185,"line_start":696,"line_end":696,"column_start":26,"column_end":26,"is_primary":true,"text":[{"text":"    pub fn sell_building(&mut this, building_name: &str) {","highlight_start":26,"highlight_end":26}],"label":null,"suggested_replacement":"self: ","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if this is a parameter name, give it a type","code":null,"level":"help","spans":[{"file_name":"src/city/city.rs","byte_start":26185,"byte_end":26194,"line_start":696,"line_end":696,"column_start":26,"column_end":35,"is_primary":true,"text":[{"text":"    pub fn sell_building(&mut this, building_name: &str) {","highlight_start":26,"highlight_end":35}],"label":null,"suggested_replacement":"this: &mut TypeName","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null},{"message":"if this is a type, explicitly ignore the parameter name","code":null,"level":"help","spans":[{"file_name":"src/city/city.rs","byte_start":26185,"byte_end":26185,"line_start":696,"line_end":696,"column_start":26,"column_end":26,"is_primary":true,"text":[{"text":"    pub fn sell_building(&mut this, building_name: &str) {","highlight_start":26,"highlight_end":26}],"label":null,"suggested_replacement":"_: ","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: expected one of `:`, `@`, or `|`, found `,`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/city/city.rs:696:35\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m696\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn sell_building(&mut this, building_name: &str) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected one of `:`, `@`, or `|`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: anonymous parameters are removed in the 2018 edition (see RFC 1685)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a `self` type, give it a parameter name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m696\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub fn sell_building(\u001b[0m\u001b[0m\u001b[38;5;10mself: \u001b[0m\u001b[0m&mut this, building_name: &str) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[38;5;10m+++++\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a parameter name, give it a type\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m696\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m    pub fn sell_building(\u001b[0m\u001b[0m\u001b[38;5;9m&mut this\u001b[0m\u001b[0m, building_name: &str) {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m696\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m    pub fn sell_building(\u001b[0m\u001b[0m\u001b[38;5;10mthis: &mut TypeName\u001b[0m\u001b[0m, building_name: &str) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a type, explicitly ignore the parameter name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m696\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub fn sell_building(\u001b[0m\u001b[0m\u001b[38;5;10m_: \u001b[0m\u001b[0m&mut this, building_name: &str) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[38;5;10m++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"expected one of `:`, `@`, or `|`, found `,`","code":null,"level":"error","spans":[{"file_name":"src/city/city.rs","byte_start":26431,"byte_end":26432,"line_start":702,"line_end":702,"column_start":44,"column_end":45,"is_primary":true,"text":[{"text":"    pub fn sell_building_internal(&mut this, building: &Building) {","highlight_start":44,"highlight_end":45}],"label":"expected one of `:`, `@`, or `|`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"anonymous parameters are removed in the 2018 edition (see RFC 1685)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is a `self` type, give it a parameter name","code":null,"level":"help","spans":[{"file_name":"src/city/city.rs","byte_start":26422,"byte_end":26422,"line_start":702,"line_end":702,"column_start":35,"column_end":35,"is_primary":true,"text":[{"text":"    pub fn sell_building_internal(&mut this, building: &Building) {","highlight_start":35,"highlight_end":35}],"label":null,"suggested_replacement":"self: ","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if this is a parameter name, give it a type","code":null,"level":"help","spans":[{"file_name":"src/city/city.rs","byte_start":26422,"byte_end":26431,"line_start":702,"line_end":702,"column_start":35,"column_end":44,"is_primary":true,"text":[{"text":"    pub fn sell_building_internal(&mut this, building: &Building) {","highlight_start":35,"highlight_end":44}],"label":null,"suggested_replacement":"this: &mut TypeName","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null},{"message":"if this is a type, explicitly ignore the parameter name","code":null,"level":"help","spans":[{"file_name":"src/city/city.rs","byte_start":26422,"byte_end":26422,"line_start":702,"line_end":702,"column_start":35,"column_end":35,"is_primary":true,"text":[{"text":"    pub fn sell_building_internal(&mut this, building: &Building) {","highlight_start":35,"highlight_end":35}],"label":null,"suggested_replacement":"_: ","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: expected one of `:`, `@`, or `|`, found `,`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/city/city.rs:702:44\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m702\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn sell_building_internal(&mut this, building: &Building) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected one of `:`, `@`, or `|`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: anonymous parameters are removed in the 2018 edition (see RFC 1685)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a `self` type, give it a parameter name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m702\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub fn sell_building_internal(\u001b[0m\u001b[0m\u001b[38;5;10mself: \u001b[0m\u001b[0m&mut this, building: &Building) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                   \u001b[0m\u001b[0m\u001b[38;5;10m+++++\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a parameter name, give it a type\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m702\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m    pub fn sell_building_internal(\u001b[0m\u001b[0m\u001b[38;5;9m&mut this\u001b[0m\u001b[0m, building: &Building) {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m702\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m    pub fn sell_building_internal(\u001b[0m\u001b[0m\u001b[38;5;10mthis: &mut TypeName\u001b[0m\u001b[0m, building: &Building) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a type, explicitly ignore the parameter name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m702\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub fn sell_building_internal(\u001b[0m\u001b[0m\u001b[38;5;10m_: \u001b[0m\u001b[0m&mut this, building: &Building) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                   \u001b[0m\u001b[0m\u001b[38;5;10m++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"expected one of `:`, `@`, or `|`, found `,`","code":null,"level":"error","spans":[{"file_name":"src/city/city.rs","byte_start":34395,"byte_end":34396,"line_start":866,"line_end":866,"column_start":36,"column_end":37,"is_primary":true,"text":[{"text":"    pub fn set_city_focus(&mut this, city_focus: CityFocus) {","highlight_start":36,"highlight_end":37}],"label":"expected one of `:`, `@`, or `|`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"anonymous parameters are removed in the 2018 edition (see RFC 1685)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is a `self` type, give it a parameter name","code":null,"level":"help","spans":[{"file_name":"src/city/city.rs","byte_start":34386,"byte_end":34386,"line_start":866,"line_end":866,"column_start":27,"column_end":27,"is_primary":true,"text":[{"text":"    pub fn set_city_focus(&mut this, city_focus: CityFocus) {","highlight_start":27,"highlight_end":27}],"label":null,"suggested_replacement":"self: ","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if this is a parameter name, give it a type","code":null,"level":"help","spans":[{"file_name":"src/city/city.rs","byte_start":34386,"byte_end":34395,"line_start":866,"line_end":866,"column_start":27,"column_end":36,"is_primary":true,"text":[{"text":"    pub fn set_city_focus(&mut this, city_focus: CityFocus) {","highlight_start":27,"highlight_end":36}],"label":null,"suggested_replacement":"this: &mut TypeName","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null},{"message":"if this is a type, explicitly ignore the parameter name","code":null,"level":"help","spans":[{"file_name":"src/city/city.rs","byte_start":34386,"byte_end":34386,"line_start":866,"line_end":866,"column_start":27,"column_end":27,"is_primary":true,"text":[{"text":"    pub fn set_city_focus(&mut this, city_focus: CityFocus) {","highlight_start":27,"highlight_end":27}],"label":null,"suggested_replacement":"_: ","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: expected one of `:`, `@`, or `|`, found `,`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/city/city.rs:866:36\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m866\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn set_city_focus(&mut this, city_focus: CityFocus) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected one of `:`, `@`, or `|`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: anonymous parameters are removed in the 2018 edition (see RFC 1685)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a `self` type, give it a parameter name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m866\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub fn set_city_focus(\u001b[0m\u001b[0m\u001b[38;5;10mself: \u001b[0m\u001b[0m&mut this, city_focus: CityFocus) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[38;5;10m+++++\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a parameter name, give it a type\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m866\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m    pub fn set_city_focus(\u001b[0m\u001b[0m\u001b[38;5;9m&mut this\u001b[0m\u001b[0m, city_focus: CityFocus) {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m866\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m    pub fn set_city_focus(\u001b[0m\u001b[0m\u001b[38;5;10mthis: &mut TypeName\u001b[0m\u001b[0m, city_focus: CityFocus) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a type, explicitly ignore the parameter name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m866\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub fn set_city_focus(\u001b[0m\u001b[0m\u001b[38;5;10m_: \u001b[0m\u001b[0m&mut this, city_focus: CityFocus) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[38;5;10m++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"expected identifier, found `:`","code":null,"level":"error","spans":[{"file_name":"src/city/managers/city_conquest_functions.rs","byte_start":15304,"byte_end":15305,"line_start":299,"line_end":299,"column_start":135,"column_end":136,"is_primary":true,"text":[{"text":"            open_borders_trade.current_trade.our_offers.push(TradeOffer::new(Constants::open_borders, TradeOfferType::Agreement, speed: conquering_civ.game_info.speed));","highlight_start":135,"highlight_end":136}],"label":"expected identifier","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: expected identifier, found `:`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/city/managers/city_conquest_functions.rs:299:135\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m299\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0monstants::open_borders, TradeOfferType::Agreement, speed: conquering_civ.game_info.speed));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected identifier\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"expected identifier, found `:`","code":null,"level":"error","spans":[{"file_name":"src/city/managers/city_conquest_functions.rs","byte_start":15874,"byte_end":15875,"line_start":306,"line_end":306,"column_start":129,"column_end":130,"is_primary":true,"text":[{"text":"                trade_logic.current_trade.our_offers.push(TradeOffer::new(Constants::peace_treaty, TradeOfferType::Treaty, speed: conquering_civ.game_info.speed));","highlight_start":129,"highlight_end":130}],"label":"expected identifier","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: expected identifier, found `:`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/city/managers/city_conquest_functions.rs:306:129\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m306\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0mw(Constants::peace_treaty, TradeOfferType::Treaty, speed: conquering_civ.game_info.speed));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected identifier\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"expected identifier, found `:`","code":null,"level":"error","spans":[{"file_name":"src/city/managers/city_conquest_functions.rs","byte_start":16040,"byte_end":16041,"line_start":307,"line_end":307,"column_start":131,"column_end":132,"is_primary":true,"text":[{"text":"                trade_logic.current_trade.their_offers.push(TradeOffer::new(Constants::peace_treaty, TradeOfferType::Treaty, speed: conquering_civ.game_info.speed));","highlight_start":131,"highlight_end":132}],"label":"expected identifier","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: expected identifier, found `:`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/city/managers/city_conquest_functions.rs:307:131\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m307\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0mw(Constants::peace_treaty, TradeOfferType::Treaty, speed: conquering_civ.game_info.speed));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected identifier\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"struct is not supported in `trait`s or `impl`s","code":null,"level":"error","spans":[{"file_name":"src/city/managers/city_founder.rs","byte_start":5405,"byte_end":5427,"line_start":140,"line_end":140,"column_start":5,"column_end":27,"is_primary":true,"text":[{"text":"    struct NamingConstants {","highlight_start":5,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider moving the struct out to a nearby module scope","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: struct is not supported in `trait`s or `impl`s\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/city/managers/city_founder.rs:140:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m140\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    struct NamingConstants {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider moving the struct out to a nearby module scope\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"implementation is not supported in `trait`s or `impl`s","code":null,"level":"error","spans":[{"file_name":"src/city/managers/city_founder.rs","byte_start":5625,"byte_end":5645,"line_start":147,"line_end":147,"column_start":5,"column_end":25,"is_primary":true,"text":[{"text":"    impl NamingConstants {","highlight_start":5,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider moving the implementation out to a nearby module scope","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: implementation is not supported in `trait`s or `impl`s\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/city/managers/city_founder.rs:147:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m147\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    impl NamingConstants {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider moving the implementation out to a nearby module scope\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"expected one of `:`, `@`, or `|`, found `)`","code":null,"level":"error","spans":[{"file_name":"src/city/managers/city_turn_manager.rs","byte_start":7856,"byte_end":7857,"line_start":178,"line_end":178,"column_start":30,"column_end":31,"is_primary":true,"text":[{"text":"    pub fn end_turn(&mut this) {","highlight_start":30,"highlight_end":31}],"label":"expected one of `:`, `@`, or `|`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"anonymous parameters are removed in the 2018 edition (see RFC 1685)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is a `self` type, give it a parameter name","code":null,"level":"help","spans":[{"file_name":"src/city/managers/city_turn_manager.rs","byte_start":7847,"byte_end":7847,"line_start":178,"line_end":178,"column_start":21,"column_end":21,"is_primary":true,"text":[{"text":"    pub fn end_turn(&mut this) {","highlight_start":21,"highlight_end":21}],"label":null,"suggested_replacement":"self: ","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if this is a parameter name, give it a type","code":null,"level":"help","spans":[{"file_name":"src/city/managers/city_turn_manager.rs","byte_start":7847,"byte_end":7856,"line_start":178,"line_end":178,"column_start":21,"column_end":30,"is_primary":true,"text":[{"text":"    pub fn end_turn(&mut this) {","highlight_start":21,"highlight_end":30}],"label":null,"suggested_replacement":"this: &mut TypeName","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null},{"message":"if this is a type, explicitly ignore the parameter name","code":null,"level":"help","spans":[{"file_name":"src/city/managers/city_turn_manager.rs","byte_start":7847,"byte_end":7847,"line_start":178,"line_end":178,"column_start":21,"column_end":21,"is_primary":true,"text":[{"text":"    pub fn end_turn(&mut this) {","highlight_start":21,"highlight_end":21}],"label":null,"suggested_replacement":"_: ","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: expected one of `:`, `@`, or `|`, found `)`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/city/managers/city_turn_manager.rs:178:30\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m178\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn end_turn(&mut this) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected one of `:`, `@`, or `|`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: anonymous parameters are removed in the 2018 edition (see RFC 1685)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a `self` type, give it a parameter name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m178\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub fn end_turn(\u001b[0m\u001b[0m\u001b[38;5;10mself: \u001b[0m\u001b[0m&mut this) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[38;5;10m+++++\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a parameter name, give it a type\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m178\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m    pub fn end_turn(\u001b[0m\u001b[0m\u001b[38;5;9m&mut this\u001b[0m\u001b[0m) {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m178\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m    pub fn end_turn(\u001b[0m\u001b[0m\u001b[38;5;10mthis: &mut TypeName\u001b[0m\u001b[0m) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a type, explicitly ignore the parameter name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m178\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub fn end_turn(\u001b[0m\u001b[0m\u001b[38;5;10m_: \u001b[0m\u001b[0m&mut this) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[38;5;10m++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"struct is not supported in `trait`s or `impl`s","code":null,"level":"error","spans":[{"file_name":"src/civilization/managers/victory_manager.rs","byte_start":5654,"byte_end":5695,"line_start":148,"line_end":148,"column_start":5,"column_end":46,"is_primary":true,"text":[{"text":"    pub struct DiplomaticVictoryVoteBreakdown {","highlight_start":5,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider moving the struct out to a nearby module scope","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: struct is not supported in `trait`s or `impl`s\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/civilization/managers/victory_manager.rs:148:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m148\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub struct DiplomaticVictoryVoteBreakdown {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider moving the struct out to a nearby module scope\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"functions are not allowed in struct definitions","code":null,"level":"error","spans":[{"file_name":"src/github/github_api.rs","byte_start":4207,"byte_end":4211,"line_start":89,"line_end":89,"column_start":16,"column_end":20,"is_primary":false,"text":[{"text":"    pub struct Repo {","highlight_start":16,"highlight_end":20}],"label":"while parsing this struct","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/github/github_api.rs","byte_start":5680,"byte_end":5876,"line_start":123,"line_end":129,"column_start":9,"column_end":10,"is_primary":true,"text":[{"text":"        pub fn to_string(&self) -> String {","highlight_start":9,"highlight_end":44},{"text":"            if self.name.is_empty() {","highlight_start":1,"highlight_end":38},{"text":"                self.direct_zip_url.clone()","highlight_start":1,"highlight_end":44},{"text":"            } else {","highlight_start":1,"highlight_end":21},{"text":"                self.name.clone()","highlight_start":1,"highlight_end":34},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"unlike in C++, Java, and C#, functions are declared in `impl` blocks","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see https://doc.rust-lang.org/book/ch05-03-method-syntax.html for more information","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: functions are not allowed in struct definitions\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/github/github_api.rs:123:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m89\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m    pub struct Repo {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mwhile parsing this struct\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m123\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m        pub fn to_string(&self) -> String {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m124\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            if self.name.is_empty() {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m125\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                self.direct_zip_url.clone()\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m126\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            } else {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m129\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_________^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: unlike in C++, Java, and C#, functions are declared in `impl` blocks\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: see https://doc.rust-lang.org/book/ch05-03-method-syntax.html for more information\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"structs are not allowed in struct definitions","code":null,"level":"error","spans":[{"file_name":"src/github/github_api.rs","byte_start":10014,"byte_end":10018,"line_start":226,"line_end":226,"column_start":16,"column_end":20,"is_primary":false,"text":[{"text":"    pub struct Tree {","highlight_start":16,"highlight_end":20}],"label":"while parsing this struct","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/github/github_api.rs","byte_start":10142,"byte_end":10161,"line_start":231,"line_end":231,"column_start":9,"column_end":28,"is_primary":true,"text":[{"text":"        pub struct TreeFile {","highlight_start":9,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider creating a new `struct` definition instead of nesting","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: structs are not allowed in struct definitions\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/github/github_api.rs:231:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m226\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub struct Tree {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mwhile parsing this struct\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m231\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        pub struct TreeFile {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider creating a new `struct` definition instead of nesting\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"expected one of `:`, `@`, or `|`, found `)`","code":null,"level":"error","spans":[{"file_name":"src/logic/multiplayer/friend_list.rs","byte_start":1301,"byte_end":1302,"line_start":57,"line_end":57,"column_start":22,"column_end":23,"is_primary":true,"text":[{"text":"    fn load(&mut this) {","highlight_start":22,"highlight_end":23}],"label":"expected one of `:`, `@`, or `|`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"anonymous parameters are removed in the 2018 edition (see RFC 1685)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is a `self` type, give it a parameter name","code":null,"level":"help","spans":[{"file_name":"src/logic/multiplayer/friend_list.rs","byte_start":1292,"byte_end":1292,"line_start":57,"line_end":57,"column_start":13,"column_end":13,"is_primary":true,"text":[{"text":"    fn load(&mut this) {","highlight_start":13,"highlight_end":13}],"label":null,"suggested_replacement":"self: ","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if this is a parameter name, give it a type","code":null,"level":"help","spans":[{"file_name":"src/logic/multiplayer/friend_list.rs","byte_start":1292,"byte_end":1301,"line_start":57,"line_end":57,"column_start":13,"column_end":22,"is_primary":true,"text":[{"text":"    fn load(&mut this) {","highlight_start":13,"highlight_end":22}],"label":null,"suggested_replacement":"this: &mut TypeName","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null},{"message":"if this is a type, explicitly ignore the parameter name","code":null,"level":"help","spans":[{"file_name":"src/logic/multiplayer/friend_list.rs","byte_start":1292,"byte_end":1292,"line_start":57,"line_end":57,"column_start":13,"column_end":13,"is_primary":true,"text":[{"text":"    fn load(&mut this) {","highlight_start":13,"highlight_end":13}],"label":null,"suggested_replacement":"_: ","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: expected one of `:`, `@`, or `|`, found `)`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/logic/multiplayer/friend_list.rs:57:22\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m57\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn load(&mut this) {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected one of `:`, `@`, or `|`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: anonymous parameters are removed in the 2018 edition (see RFC 1685)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a `self` type, give it a parameter name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m57\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    fn load(\u001b[0m\u001b[0m\u001b[38;5;10mself: \u001b[0m\u001b[0m&mut this) {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[38;5;10m+++++\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a parameter name, give it a type\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m57\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m    fn load(\u001b[0m\u001b[0m\u001b[38;5;9m&mut this\u001b[0m\u001b[0m) {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m57\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m    fn load(\u001b[0m\u001b[0m\u001b[38;5;10mthis: &mut TypeName\u001b[0m\u001b[0m) {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a type, explicitly ignore the parameter name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m57\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    fn load(\u001b[0m\u001b[0m\u001b[38;5;10m_: \u001b[0m\u001b[0m&mut this) {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[38;5;10m++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"expected one of `:`, `@`, or `|`, found `)`","code":null,"level":"error","spans":[{"file_name":"src/logic/multiplayer/friend_list.rs","byte_start":2138,"byte_end":2139,"line_start":78,"line_end":78,"column_start":18,"column_end":19,"is_primary":true,"text":[{"text":"    fn save(&this) {","highlight_start":18,"highlight_end":19}],"label":"expected one of `:`, `@`, or `|`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"anonymous parameters are removed in the 2018 edition (see RFC 1685)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is a `self` type, give it a parameter name","code":null,"level":"help","spans":[{"file_name":"src/logic/multiplayer/friend_list.rs","byte_start":2133,"byte_end":2133,"line_start":78,"line_end":78,"column_start":13,"column_end":13,"is_primary":true,"text":[{"text":"    fn save(&this) {","highlight_start":13,"highlight_end":13}],"label":null,"suggested_replacement":"self: ","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if this is a parameter name, give it a type","code":null,"level":"help","spans":[{"file_name":"src/logic/multiplayer/friend_list.rs","byte_start":2133,"byte_end":2138,"line_start":78,"line_end":78,"column_start":13,"column_end":18,"is_primary":true,"text":[{"text":"    fn save(&this) {","highlight_start":13,"highlight_end":18}],"label":null,"suggested_replacement":"this: &TypeName","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null},{"message":"if this is a type, explicitly ignore the parameter name","code":null,"level":"help","spans":[{"file_name":"src/logic/multiplayer/friend_list.rs","byte_start":2133,"byte_end":2133,"line_start":78,"line_end":78,"column_start":13,"column_end":13,"is_primary":true,"text":[{"text":"    fn save(&this) {","highlight_start":13,"highlight_end":13}],"label":null,"suggested_replacement":"_: ","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: expected one of `:`, `@`, or `|`, found `)`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/logic/multiplayer/friend_list.rs:78:18\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m78\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn save(&this) {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected one of `:`, `@`, or `|`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: anonymous parameters are removed in the 2018 edition (see RFC 1685)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a `self` type, give it a parameter name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m78\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    fn save(\u001b[0m\u001b[0m\u001b[38;5;10mself: \u001b[0m\u001b[0m&this) {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[38;5;10m+++++\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a parameter name, give it a type\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m78\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m    fn save(\u001b[0m\u001b[0m\u001b[38;5;9m&this\u001b[0m\u001b[0m) {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m78\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m    fn save(\u001b[0m\u001b[0m\u001b[38;5;10mthis: &TypeName\u001b[0m\u001b[0m) {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a type, explicitly ignore the parameter name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m78\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    fn save(\u001b[0m\u001b[0m\u001b[38;5;10m_: \u001b[0m\u001b[0m&this) {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[38;5;10m++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"expected one of `:`, `@`, or `|`, found `,`","code":null,"level":"error","spans":[{"file_name":"src/logic/multiplayer/friend_list.rs","byte_start":2611,"byte_end":2612,"line_start":92,"line_end":92,"column_start":25,"column_end":26,"is_primary":true,"text":[{"text":"    pub fn add(&mut this, name: String, player_id: String) -> ErrorType {","highlight_start":25,"highlight_end":26}],"label":"expected one of `:`, `@`, or `|`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"anonymous parameters are removed in the 2018 edition (see RFC 1685)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is a `self` type, give it a parameter name","code":null,"level":"help","spans":[{"file_name":"src/logic/multiplayer/friend_list.rs","byte_start":2602,"byte_end":2602,"line_start":92,"line_end":92,"column_start":16,"column_end":16,"is_primary":true,"text":[{"text":"    pub fn add(&mut this, name: String, player_id: String) -> ErrorType {","highlight_start":16,"highlight_end":16}],"label":null,"suggested_replacement":"self: ","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if this is a parameter name, give it a type","code":null,"level":"help","spans":[{"file_name":"src/logic/multiplayer/friend_list.rs","byte_start":2602,"byte_end":2611,"line_start":92,"line_end":92,"column_start":16,"column_end":25,"is_primary":true,"text":[{"text":"    pub fn add(&mut this, name: String, player_id: String) -> ErrorType {","highlight_start":16,"highlight_end":25}],"label":null,"suggested_replacement":"this: &mut TypeName","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null},{"message":"if this is a type, explicitly ignore the parameter name","code":null,"level":"help","spans":[{"file_name":"src/logic/multiplayer/friend_list.rs","byte_start":2602,"byte_end":2602,"line_start":92,"line_end":92,"column_start":16,"column_end":16,"is_primary":true,"text":[{"text":"    pub fn add(&mut this, name: String, player_id: String) -> ErrorType {","highlight_start":16,"highlight_end":16}],"label":null,"suggested_replacement":"_: ","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: expected one of `:`, `@`, or `|`, found `,`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/logic/multiplayer/friend_list.rs:92:25\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m92\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn add(&mut this, name: String, player_id: String) -> ErrorType {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected one of `:`, `@`, or `|`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: anonymous parameters are removed in the 2018 edition (see RFC 1685)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a `self` type, give it a parameter name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m92\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub fn add(\u001b[0m\u001b[0m\u001b[38;5;10mself: \u001b[0m\u001b[0m&mut this, name: String, player_id: String) -> ErrorType {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[38;5;10m+++++\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a parameter name, give it a type\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m92\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m    pub fn add(\u001b[0m\u001b[0m\u001b[38;5;9m&mut this\u001b[0m\u001b[0m, name: String, player_id: String) -> ErrorType {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m92\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m    pub fn add(\u001b[0m\u001b[0m\u001b[38;5;10mthis: &mut TypeName\u001b[0m\u001b[0m, name: String, player_id: String) -> ErrorType {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a type, explicitly ignore the parameter name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m92\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub fn add(\u001b[0m\u001b[0m\u001b[38;5;10m_: \u001b[0m\u001b[0m&mut this, name: String, player_id: String) -> ErrorType {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[38;5;10m++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"expected one of `:`, `@`, or `|`, found `,`","code":null,"level":"error","spans":[{"file_name":"src/logic/multiplayer/friend_list.rs","byte_start":3694,"byte_end":3695,"line_start":133,"line_end":133,"column_start":26,"column_end":27,"is_primary":true,"text":[{"text":"    pub fn edit(&mut this, friend: &Friend, new_name: String, new_player_id: String) -> ErrorType {","highlight_start":26,"highlight_end":27}],"label":"expected one of `:`, `@`, or `|`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"anonymous parameters are removed in the 2018 edition (see RFC 1685)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is a `self` type, give it a parameter name","code":null,"level":"help","spans":[{"file_name":"src/logic/multiplayer/friend_list.rs","byte_start":3685,"byte_end":3685,"line_start":133,"line_end":133,"column_start":17,"column_end":17,"is_primary":true,"text":[{"text":"    pub fn edit(&mut this, friend: &Friend, new_name: String, new_player_id: String) -> ErrorType {","highlight_start":17,"highlight_end":17}],"label":null,"suggested_replacement":"self: ","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if this is a parameter name, give it a type","code":null,"level":"help","spans":[{"file_name":"src/logic/multiplayer/friend_list.rs","byte_start":3685,"byte_end":3694,"line_start":133,"line_end":133,"column_start":17,"column_end":26,"is_primary":true,"text":[{"text":"    pub fn edit(&mut this, friend: &Friend, new_name: String, new_player_id: String) -> ErrorType {","highlight_start":17,"highlight_end":26}],"label":null,"suggested_replacement":"this: &mut TypeName","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null},{"message":"if this is a type, explicitly ignore the parameter name","code":null,"level":"help","spans":[{"file_name":"src/logic/multiplayer/friend_list.rs","byte_start":3685,"byte_end":3685,"line_start":133,"line_end":133,"column_start":17,"column_end":17,"is_primary":true,"text":[{"text":"    pub fn edit(&mut this, friend: &Friend, new_name: String, new_player_id: String) -> ErrorType {","highlight_start":17,"highlight_end":17}],"label":null,"suggested_replacement":"_: ","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: expected one of `:`, `@`, or `|`, found `,`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/logic/multiplayer/friend_list.rs:133:26\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m133\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn edit(&mut this, friend: &Friend, new_name: String, new_player_id: String) -> ErrorType {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected one of `:`, `@`, or `|`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: anonymous parameters are removed in the 2018 edition (see RFC 1685)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a `self` type, give it a parameter name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m133\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub fn edit(\u001b[0m\u001b[0m\u001b[38;5;10mself: \u001b[0m\u001b[0m&mut this, friend: &Friend, new_name: String, new_player_id: String) -> ErrorType {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[38;5;10m+++++\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a parameter name, give it a type\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m133\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m    pub fn edit(\u001b[0m\u001b[0m\u001b[38;5;9m&mut this\u001b[0m\u001b[0m, friend: &Friend, new_name: String, new_player_id: String) -> ErrorType {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m133\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m    pub fn edit(\u001b[0m\u001b[0m\u001b[38;5;10mthis: &mut TypeName\u001b[0m\u001b[0m, friend: &Friend, new_name: String, new_player_id: String) -> ErrorType {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a type, explicitly ignore the parameter name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m133\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub fn edit(\u001b[0m\u001b[0m\u001b[38;5;10m_: \u001b[0m\u001b[0m&mut this, friend: &Friend, new_name: String, new_player_id: String) -> ErrorType {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[38;5;10m++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"expected one of `:`, `@`, or `|`, found `,`","code":null,"level":"error","spans":[{"file_name":"src/logic/multiplayer/friend_list.rs","byte_start":5085,"byte_end":5086,"line_start":177,"line_end":177,"column_start":28,"column_end":29,"is_primary":true,"text":[{"text":"    pub fn delete(&mut this, friend: &Friend) {","highlight_start":28,"highlight_end":29}],"label":"expected one of `:`, `@`, or `|`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"anonymous parameters are removed in the 2018 edition (see RFC 1685)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is a `self` type, give it a parameter name","code":null,"level":"help","spans":[{"file_name":"src/logic/multiplayer/friend_list.rs","byte_start":5076,"byte_end":5076,"line_start":177,"line_end":177,"column_start":19,"column_end":19,"is_primary":true,"text":[{"text":"    pub fn delete(&mut this, friend: &Friend) {","highlight_start":19,"highlight_end":19}],"label":null,"suggested_replacement":"self: ","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if this is a parameter name, give it a type","code":null,"level":"help","spans":[{"file_name":"src/logic/multiplayer/friend_list.rs","byte_start":5076,"byte_end":5085,"line_start":177,"line_end":177,"column_start":19,"column_end":28,"is_primary":true,"text":[{"text":"    pub fn delete(&mut this, friend: &Friend) {","highlight_start":19,"highlight_end":28}],"label":null,"suggested_replacement":"this: &mut TypeName","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null},{"message":"if this is a type, explicitly ignore the parameter name","code":null,"level":"help","spans":[{"file_name":"src/logic/multiplayer/friend_list.rs","byte_start":5076,"byte_end":5076,"line_start":177,"line_end":177,"column_start":19,"column_end":19,"is_primary":true,"text":[{"text":"    pub fn delete(&mut this, friend: &Friend) {","highlight_start":19,"highlight_end":19}],"label":null,"suggested_replacement":"_: ","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: expected one of `:`, `@`, or `|`, found `,`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/logic/multiplayer/friend_list.rs:177:28\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m177\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn delete(&mut this, friend: &Friend) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected one of `:`, `@`, or `|`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: anonymous parameters are removed in the 2018 edition (see RFC 1685)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a `self` type, give it a parameter name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m177\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub fn delete(\u001b[0m\u001b[0m\u001b[38;5;10mself: \u001b[0m\u001b[0m&mut this, friend: &Friend) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[38;5;10m+++++\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a parameter name, give it a type\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m177\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m    pub fn delete(\u001b[0m\u001b[0m\u001b[38;5;9m&mut this\u001b[0m\u001b[0m, friend: &Friend) {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m177\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m    pub fn delete(\u001b[0m\u001b[0m\u001b[38;5;10mthis: &mut TypeName\u001b[0m\u001b[0m, friend: &Friend) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a type, explicitly ignore the parameter name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m177\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub fn delete(\u001b[0m\u001b[0m\u001b[38;5;10m_: \u001b[0m\u001b[0m&mut this, friend: &Friend) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[38;5;10m++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"expected one of `:`, `@`, or `|`, found `,`","code":null,"level":"error","spans":[{"file_name":"src/logic/multiplayer/friend_list.rs","byte_start":5269,"byte_end":5270,"line_start":183,"line_end":183,"column_start":47,"column_end":48,"is_primary":true,"text":[{"text":"    pub fn is_friend_name_in_friend_list(&this, name: &str) -> ErrorType {","highlight_start":47,"highlight_end":48}],"label":"expected one of `:`, `@`, or `|`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"anonymous parameters are removed in the 2018 edition (see RFC 1685)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is a `self` type, give it a parameter name","code":null,"level":"help","spans":[{"file_name":"src/logic/multiplayer/friend_list.rs","byte_start":5264,"byte_end":5264,"line_start":183,"line_end":183,"column_start":42,"column_end":42,"is_primary":true,"text":[{"text":"    pub fn is_friend_name_in_friend_list(&this, name: &str) -> ErrorType {","highlight_start":42,"highlight_end":42}],"label":null,"suggested_replacement":"self: ","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if this is a parameter name, give it a type","code":null,"level":"help","spans":[{"file_name":"src/logic/multiplayer/friend_list.rs","byte_start":5264,"byte_end":5269,"line_start":183,"line_end":183,"column_start":42,"column_end":47,"is_primary":true,"text":[{"text":"    pub fn is_friend_name_in_friend_list(&this, name: &str) -> ErrorType {","highlight_start":42,"highlight_end":47}],"label":null,"suggested_replacement":"this: &TypeName","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null},{"message":"if this is a type, explicitly ignore the parameter name","code":null,"level":"help","spans":[{"file_name":"src/logic/multiplayer/friend_list.rs","byte_start":5264,"byte_end":5264,"line_start":183,"line_end":183,"column_start":42,"column_end":42,"is_primary":true,"text":[{"text":"    pub fn is_friend_name_in_friend_list(&this, name: &str) -> ErrorType {","highlight_start":42,"highlight_end":42}],"label":null,"suggested_replacement":"_: ","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: expected one of `:`, `@`, or `|`, found `,`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/logic/multiplayer/friend_list.rs:183:47\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m183\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn is_friend_name_in_friend_list(&this, name: &str) -> ErrorType {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected one of `:`, `@`, or `|`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: anonymous parameters are removed in the 2018 edition (see RFC 1685)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a `self` type, give it a parameter name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m183\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub fn is_friend_name_in_friend_list(\u001b[0m\u001b[0m\u001b[38;5;10mself: \u001b[0m\u001b[0m&this, name: &str) -> ErrorType {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                          \u001b[0m\u001b[0m\u001b[38;5;10m+++++\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a parameter name, give it a type\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m183\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m    pub fn is_friend_name_in_friend_list(\u001b[0m\u001b[0m\u001b[38;5;9m&this\u001b[0m\u001b[0m, name: &str) -> ErrorType {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m183\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m    pub fn is_friend_name_in_friend_list(\u001b[0m\u001b[0m\u001b[38;5;10mthis: &TypeName\u001b[0m\u001b[0m, name: &str) -> ErrorType {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a type, explicitly ignore the parameter name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m183\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub fn is_friend_name_in_friend_list(\u001b[0m\u001b[0m\u001b[38;5;10m_: \u001b[0m\u001b[0m&this, name: &str) -> ErrorType {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                          \u001b[0m\u001b[0m\u001b[38;5;10m++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"expected one of `:`, `@`, or `|`, found `,`","code":null,"level":"error","spans":[{"file_name":"src/logic/multiplayer/friend_list.rs","byte_start":5535,"byte_end":5536,"line_start":192,"line_end":192,"column_start":45,"column_end":46,"is_primary":true,"text":[{"text":"    pub fn is_friend_id_in_friend_list(&this, player_id: &str) -> ErrorType {","highlight_start":45,"highlight_end":46}],"label":"expected one of `:`, `@`, or `|`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"anonymous parameters are removed in the 2018 edition (see RFC 1685)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is a `self` type, give it a parameter name","code":null,"level":"help","spans":[{"file_name":"src/logic/multiplayer/friend_list.rs","byte_start":5530,"byte_end":5530,"line_start":192,"line_end":192,"column_start":40,"column_end":40,"is_primary":true,"text":[{"text":"    pub fn is_friend_id_in_friend_list(&this, player_id: &str) -> ErrorType {","highlight_start":40,"highlight_end":40}],"label":null,"suggested_replacement":"self: ","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if this is a parameter name, give it a type","code":null,"level":"help","spans":[{"file_name":"src/logic/multiplayer/friend_list.rs","byte_start":5530,"byte_end":5535,"line_start":192,"line_end":192,"column_start":40,"column_end":45,"is_primary":true,"text":[{"text":"    pub fn is_friend_id_in_friend_list(&this, player_id: &str) -> ErrorType {","highlight_start":40,"highlight_end":45}],"label":null,"suggested_replacement":"this: &TypeName","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null},{"message":"if this is a type, explicitly ignore the parameter name","code":null,"level":"help","spans":[{"file_name":"src/logic/multiplayer/friend_list.rs","byte_start":5530,"byte_end":5530,"line_start":192,"line_end":192,"column_start":40,"column_end":40,"is_primary":true,"text":[{"text":"    pub fn is_friend_id_in_friend_list(&this, player_id: &str) -> ErrorType {","highlight_start":40,"highlight_end":40}],"label":null,"suggested_replacement":"_: ","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: expected one of `:`, `@`, or `|`, found `,`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/logic/multiplayer/friend_list.rs:192:45\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m192\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn is_friend_id_in_friend_list(&this, player_id: &str) -> ErrorType {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected one of `:`, `@`, or `|`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: anonymous parameters are removed in the 2018 edition (see RFC 1685)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a `self` type, give it a parameter name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m192\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub fn is_friend_id_in_friend_list(\u001b[0m\u001b[0m\u001b[38;5;10mself: \u001b[0m\u001b[0m&this, player_id: &str) -> ErrorType {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                        \u001b[0m\u001b[0m\u001b[38;5;10m+++++\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a parameter name, give it a type\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m192\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m    pub fn is_friend_id_in_friend_list(\u001b[0m\u001b[0m\u001b[38;5;9m&this\u001b[0m\u001b[0m, player_id: &str) -> ErrorType {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m192\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m    pub fn is_friend_id_in_friend_list(\u001b[0m\u001b[0m\u001b[38;5;10mthis: &TypeName\u001b[0m\u001b[0m, player_id: &str) -> ErrorType {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a type, explicitly ignore the parameter name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m192\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub fn is_friend_id_in_friend_list(\u001b[0m\u001b[0m\u001b[38;5;10m_: \u001b[0m\u001b[0m&this, player_id: &str) -> ErrorType {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                        \u001b[0m\u001b[0m\u001b[38;5;10m++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"expected one of `:`, `@`, or `|`, found `)`","code":null,"level":"error","spans":[{"file_name":"src/logic/multiplayer/friend_list.rs","byte_start":5836,"byte_end":5837,"line_start":202,"line_end":202,"column_start":34,"column_end":35,"is_primary":true,"text":[{"text":"    pub fn get_friends_list(&this) -> Vec<Friend> {","highlight_start":34,"highlight_end":35}],"label":"expected one of `:`, `@`, or `|`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"anonymous parameters are removed in the 2018 edition (see RFC 1685)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is a `self` type, give it a parameter name","code":null,"level":"help","spans":[{"file_name":"src/logic/multiplayer/friend_list.rs","byte_start":5831,"byte_end":5831,"line_start":202,"line_end":202,"column_start":29,"column_end":29,"is_primary":true,"text":[{"text":"    pub fn get_friends_list(&this) -> Vec<Friend> {","highlight_start":29,"highlight_end":29}],"label":null,"suggested_replacement":"self: ","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if this is a parameter name, give it a type","code":null,"level":"help","spans":[{"file_name":"src/logic/multiplayer/friend_list.rs","byte_start":5831,"byte_end":5836,"line_start":202,"line_end":202,"column_start":29,"column_end":34,"is_primary":true,"text":[{"text":"    pub fn get_friends_list(&this) -> Vec<Friend> {","highlight_start":29,"highlight_end":34}],"label":null,"suggested_replacement":"this: &TypeName","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null},{"message":"if this is a type, explicitly ignore the parameter name","code":null,"level":"help","spans":[{"file_name":"src/logic/multiplayer/friend_list.rs","byte_start":5831,"byte_end":5831,"line_start":202,"line_end":202,"column_start":29,"column_end":29,"is_primary":true,"text":[{"text":"    pub fn get_friends_list(&this) -> Vec<Friend> {","highlight_start":29,"highlight_end":29}],"label":null,"suggested_replacement":"_: ","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: expected one of `:`, `@`, or `|`, found `)`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/logic/multiplayer/friend_list.rs:202:34\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m202\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn get_friends_list(&this) -> Vec<Friend> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected one of `:`, `@`, or `|`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: anonymous parameters are removed in the 2018 edition (see RFC 1685)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a `self` type, give it a parameter name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m202\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub fn get_friends_list(\u001b[0m\u001b[0m\u001b[38;5;10mself: \u001b[0m\u001b[0m&this) -> Vec<Friend> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[38;5;10m+++++\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a parameter name, give it a type\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m202\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m    pub fn get_friends_list(\u001b[0m\u001b[0m\u001b[38;5;9m&this\u001b[0m\u001b[0m) -> Vec<Friend> {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m202\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m    pub fn get_friends_list(\u001b[0m\u001b[0m\u001b[38;5;10mthis: &TypeName\u001b[0m\u001b[0m) -> Vec<Friend> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a type, explicitly ignore the parameter name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m202\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub fn get_friends_list(\u001b[0m\u001b[0m\u001b[38;5;10m_: \u001b[0m\u001b[0m&this) -> Vec<Friend> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[38;5;10m++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"expected one of `:`, `@`, or `|`, found `,`","code":null,"level":"error","spans":[{"file_name":"src/mapunit/unit_promotions.rs","byte_start":3992,"byte_end":3993,"line_start":118,"line_end":118,"column_start":35,"column_end":36,"is_primary":true,"text":[{"text":"    pub fn add_promotion(&mut this, promotion_name: String, is_free: bool) {","highlight_start":35,"highlight_end":36}],"label":"expected one of `:`, `@`, or `|`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"anonymous parameters are removed in the 2018 edition (see RFC 1685)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is a `self` type, give it a parameter name","code":null,"level":"help","spans":[{"file_name":"src/mapunit/unit_promotions.rs","byte_start":3983,"byte_end":3983,"line_start":118,"line_end":118,"column_start":26,"column_end":26,"is_primary":true,"text":[{"text":"    pub fn add_promotion(&mut this, promotion_name: String, is_free: bool) {","highlight_start":26,"highlight_end":26}],"label":null,"suggested_replacement":"self: ","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if this is a parameter name, give it a type","code":null,"level":"help","spans":[{"file_name":"src/mapunit/unit_promotions.rs","byte_start":3983,"byte_end":3992,"line_start":118,"line_end":118,"column_start":26,"column_end":35,"is_primary":true,"text":[{"text":"    pub fn add_promotion(&mut this, promotion_name: String, is_free: bool) {","highlight_start":26,"highlight_end":35}],"label":null,"suggested_replacement":"this: &mut TypeName","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null},{"message":"if this is a type, explicitly ignore the parameter name","code":null,"level":"help","spans":[{"file_name":"src/mapunit/unit_promotions.rs","byte_start":3983,"byte_end":3983,"line_start":118,"line_end":118,"column_start":26,"column_end":26,"is_primary":true,"text":[{"text":"    pub fn add_promotion(&mut this, promotion_name: String, is_free: bool) {","highlight_start":26,"highlight_end":26}],"label":null,"suggested_replacement":"_: ","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: expected one of `:`, `@`, or `|`, found `,`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mapunit/unit_promotions.rs:118:35\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m118\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn add_promotion(&mut this, promotion_name: String, is_free: bool) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected one of `:`, `@`, or `|`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: anonymous parameters are removed in the 2018 edition (see RFC 1685)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a `self` type, give it a parameter name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m118\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub fn add_promotion(\u001b[0m\u001b[0m\u001b[38;5;10mself: \u001b[0m\u001b[0m&mut this, promotion_name: String, is_free: bool) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[38;5;10m+++++\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a parameter name, give it a type\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m118\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m    pub fn add_promotion(\u001b[0m\u001b[0m\u001b[38;5;9m&mut this\u001b[0m\u001b[0m, promotion_name: String, is_free: bool) {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m118\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m    pub fn add_promotion(\u001b[0m\u001b[0m\u001b[38;5;10mthis: &mut TypeName\u001b[0m\u001b[0m, promotion_name: String, is_free: bool) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a type, explicitly ignore the parameter name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m118\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub fn add_promotion(\u001b[0m\u001b[0m\u001b[38;5;10m_: \u001b[0m\u001b[0m&mut this, promotion_name: String, is_free: bool) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[38;5;10m++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"expected one of `:`, `@`, or `|`, found `,`","code":null,"level":"error","spans":[{"file_name":"src/mapunit/unit_promotions.rs","byte_start":5944,"byte_end":5945,"line_start":166,"line_end":166,"column_start":38,"column_end":39,"is_primary":true,"text":[{"text":"    pub fn remove_promotion(&mut this, promotion_name: String) {","highlight_start":38,"highlight_end":39}],"label":"expected one of `:`, `@`, or `|`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"anonymous parameters are removed in the 2018 edition (see RFC 1685)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is a `self` type, give it a parameter name","code":null,"level":"help","spans":[{"file_name":"src/mapunit/unit_promotions.rs","byte_start":5935,"byte_end":5935,"line_start":166,"line_end":166,"column_start":29,"column_end":29,"is_primary":true,"text":[{"text":"    pub fn remove_promotion(&mut this, promotion_name: String) {","highlight_start":29,"highlight_end":29}],"label":null,"suggested_replacement":"self: ","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if this is a parameter name, give it a type","code":null,"level":"help","spans":[{"file_name":"src/mapunit/unit_promotions.rs","byte_start":5935,"byte_end":5944,"line_start":166,"line_end":166,"column_start":29,"column_end":38,"is_primary":true,"text":[{"text":"    pub fn remove_promotion(&mut this, promotion_name: String) {","highlight_start":29,"highlight_end":38}],"label":null,"suggested_replacement":"this: &mut TypeName","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null},{"message":"if this is a type, explicitly ignore the parameter name","code":null,"level":"help","spans":[{"file_name":"src/mapunit/unit_promotions.rs","byte_start":5935,"byte_end":5935,"line_start":166,"line_end":166,"column_start":29,"column_end":29,"is_primary":true,"text":[{"text":"    pub fn remove_promotion(&mut this, promotion_name: String) {","highlight_start":29,"highlight_end":29}],"label":null,"suggested_replacement":"_: ","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: expected one of `:`, `@`, or `|`, found `,`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mapunit/unit_promotions.rs:166:38\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m166\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn remove_promotion(&mut this, promotion_name: String) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected one of `:`, `@`, or `|`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: anonymous parameters are removed in the 2018 edition (see RFC 1685)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a `self` type, give it a parameter name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m166\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub fn remove_promotion(\u001b[0m\u001b[0m\u001b[38;5;10mself: \u001b[0m\u001b[0m&mut this, promotion_name: String) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[38;5;10m+++++\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a parameter name, give it a type\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m166\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m    pub fn remove_promotion(\u001b[0m\u001b[0m\u001b[38;5;9m&mut this\u001b[0m\u001b[0m, promotion_name: String) {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m166\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m    pub fn remove_promotion(\u001b[0m\u001b[0m\u001b[38;5;10mthis: &mut TypeName\u001b[0m\u001b[0m, promotion_name: String) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a type, explicitly ignore the parameter name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m166\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub fn remove_promotion(\u001b[0m\u001b[0m\u001b[38;5;10m_: \u001b[0m\u001b[0m&mut this, promotion_name: String) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[38;5;10m++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"expected one of `:`, `@`, or `|`, found `)`","code":null,"level":"error","spans":[{"file_name":"src/mapunit/unit_promotions.rs","byte_start":7477,"byte_end":7478,"line_start":205,"line_end":205,"column_start":42,"column_end":43,"is_primary":true,"text":[{"text":"    pub fn get_available_promotions(&this) -> Vec<&Promotion> {","highlight_start":42,"highlight_end":43}],"label":"expected one of `:`, `@`, or `|`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"anonymous parameters are removed in the 2018 edition (see RFC 1685)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is a `self` type, give it a parameter name","code":null,"level":"help","spans":[{"file_name":"src/mapunit/unit_promotions.rs","byte_start":7472,"byte_end":7472,"line_start":205,"line_end":205,"column_start":37,"column_end":37,"is_primary":true,"text":[{"text":"    pub fn get_available_promotions(&this) -> Vec<&Promotion> {","highlight_start":37,"highlight_end":37}],"label":null,"suggested_replacement":"self: ","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if this is a parameter name, give it a type","code":null,"level":"help","spans":[{"file_name":"src/mapunit/unit_promotions.rs","byte_start":7472,"byte_end":7477,"line_start":205,"line_end":205,"column_start":37,"column_end":42,"is_primary":true,"text":[{"text":"    pub fn get_available_promotions(&this) -> Vec<&Promotion> {","highlight_start":37,"highlight_end":42}],"label":null,"suggested_replacement":"this: &TypeName","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null},{"message":"if this is a type, explicitly ignore the parameter name","code":null,"level":"help","spans":[{"file_name":"src/mapunit/unit_promotions.rs","byte_start":7472,"byte_end":7472,"line_start":205,"line_end":205,"column_start":37,"column_end":37,"is_primary":true,"text":[{"text":"    pub fn get_available_promotions(&this) -> Vec<&Promotion> {","highlight_start":37,"highlight_end":37}],"label":null,"suggested_replacement":"_: ","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: expected one of `:`, `@`, or `|`, found `)`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mapunit/unit_promotions.rs:205:42\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m205\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn get_available_promotions(&this) -> Vec<&Promotion> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected one of `:`, `@`, or `|`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: anonymous parameters are removed in the 2018 edition (see RFC 1685)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a `self` type, give it a parameter name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m205\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub fn get_available_promotions(\u001b[0m\u001b[0m\u001b[38;5;10mself: \u001b[0m\u001b[0m&this) -> Vec<&Promotion> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                     \u001b[0m\u001b[0m\u001b[38;5;10m+++++\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a parameter name, give it a type\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m205\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m    pub fn get_available_promotions(\u001b[0m\u001b[0m\u001b[38;5;9m&this\u001b[0m\u001b[0m) -> Vec<&Promotion> {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m205\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m    pub fn get_available_promotions(\u001b[0m\u001b[0m\u001b[38;5;10mthis: &TypeName\u001b[0m\u001b[0m) -> Vec<&Promotion> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a type, explicitly ignore the parameter name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m205\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub fn get_available_promotions(\u001b[0m\u001b[0m\u001b[38;5;10m_: \u001b[0m\u001b[0m&this) -> Vec<&Promotion> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                     \u001b[0m\u001b[0m\u001b[38;5;10m++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"expected one of `:`, `@`, or `|`, found `,`","code":null,"level":"error","spans":[{"file_name":"src/mapunit/unit_promotions.rs","byte_start":7911,"byte_end":7912,"line_start":221,"line_end":221,"column_start":26,"column_end":27,"is_primary":true,"text":[{"text":"    fn is_available(&this, promotion: &Promotion) -> bool {","highlight_start":26,"highlight_end":27}],"label":"expected one of `:`, `@`, or `|`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"anonymous parameters are removed in the 2018 edition (see RFC 1685)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is a `self` type, give it a parameter name","code":null,"level":"help","spans":[{"file_name":"src/mapunit/unit_promotions.rs","byte_start":7906,"byte_end":7906,"line_start":221,"line_end":221,"column_start":21,"column_end":21,"is_primary":true,"text":[{"text":"    fn is_available(&this, promotion: &Promotion) -> bool {","highlight_start":21,"highlight_end":21}],"label":null,"suggested_replacement":"self: ","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if this is a parameter name, give it a type","code":null,"level":"help","spans":[{"file_name":"src/mapunit/unit_promotions.rs","byte_start":7906,"byte_end":7911,"line_start":221,"line_end":221,"column_start":21,"column_end":26,"is_primary":true,"text":[{"text":"    fn is_available(&this, promotion: &Promotion) -> bool {","highlight_start":21,"highlight_end":26}],"label":null,"suggested_replacement":"this: &TypeName","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null},{"message":"if this is a type, explicitly ignore the parameter name","code":null,"level":"help","spans":[{"file_name":"src/mapunit/unit_promotions.rs","byte_start":7906,"byte_end":7906,"line_start":221,"line_end":221,"column_start":21,"column_end":21,"is_primary":true,"text":[{"text":"    fn is_available(&this, promotion: &Promotion) -> bool {","highlight_start":21,"highlight_end":21}],"label":null,"suggested_replacement":"_: ","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: expected one of `:`, `@`, or `|`, found `,`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mapunit/unit_promotions.rs:221:26\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m221\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn is_available(&this, promotion: &Promotion) -> bool {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected one of `:`, `@`, or `|`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: anonymous parameters are removed in the 2018 edition (see RFC 1685)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a `self` type, give it a parameter name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m221\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    fn is_available(\u001b[0m\u001b[0m\u001b[38;5;10mself: \u001b[0m\u001b[0m&this, promotion: &Promotion) -> bool {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[38;5;10m+++++\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a parameter name, give it a type\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m221\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m    fn is_available(\u001b[0m\u001b[0m\u001b[38;5;9m&this\u001b[0m\u001b[0m, promotion: &Promotion) -> bool {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m221\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m    fn is_available(\u001b[0m\u001b[0m\u001b[38;5;10mthis: &TypeName\u001b[0m\u001b[0m, promotion: &Promotion) -> bool {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a type, explicitly ignore the parameter name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m221\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    fn is_available(\u001b[0m\u001b[0m\u001b[38;5;10m_: \u001b[0m\u001b[0m&this, promotion: &Promotion) -> bool {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[38;5;10m++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"expected one of `:`, `@`, or `|`, found `,`","code":null,"level":"error","spans":[{"file_name":"src/mapunit/unit_promotions.rs","byte_start":9097,"byte_end":9098,"line_start":260,"line_end":260,"column_start":16,"column_end":17,"is_primary":true,"text":[{"text":"    fn eq(&this, other: &UnitPromotions<'a>) -> bool {","highlight_start":16,"highlight_end":17}],"label":"expected one of `:`, `@`, or `|`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"anonymous parameters are removed in the 2018 edition (see RFC 1685)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is a `self` type, give it a parameter name","code":null,"level":"help","spans":[{"file_name":"src/mapunit/unit_promotions.rs","byte_start":9092,"byte_end":9092,"line_start":260,"line_end":260,"column_start":11,"column_end":11,"is_primary":true,"text":[{"text":"    fn eq(&this, other: &UnitPromotions<'a>) -> bool {","highlight_start":11,"highlight_end":11}],"label":null,"suggested_replacement":"self: ","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if this is a parameter name, give it a type","code":null,"level":"help","spans":[{"file_name":"src/mapunit/unit_promotions.rs","byte_start":9092,"byte_end":9097,"line_start":260,"line_end":260,"column_start":11,"column_end":16,"is_primary":true,"text":[{"text":"    fn eq(&this, other: &UnitPromotions<'a>) -> bool {","highlight_start":11,"highlight_end":16}],"label":null,"suggested_replacement":"this: &TypeName","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null},{"message":"if this is a type, explicitly ignore the parameter name","code":null,"level":"help","spans":[{"file_name":"src/mapunit/unit_promotions.rs","byte_start":9092,"byte_end":9092,"line_start":260,"line_end":260,"column_start":11,"column_end":11,"is_primary":true,"text":[{"text":"    fn eq(&this, other: &UnitPromotions<'a>) -> bool {","highlight_start":11,"highlight_end":11}],"label":null,"suggested_replacement":"_: ","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: expected one of `:`, `@`, or `|`, found `,`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mapunit/unit_promotions.rs:260:16\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m260\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn eq(&this, other: &UnitPromotions<'a>) -> bool {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected one of `:`, `@`, or `|`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: anonymous parameters are removed in the 2018 edition (see RFC 1685)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a `self` type, give it a parameter name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m260\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    fn eq(\u001b[0m\u001b[0m\u001b[38;5;10mself: \u001b[0m\u001b[0m&this, other: &UnitPromotions<'a>) -> bool {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[38;5;10m+++++\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a parameter name, give it a type\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m260\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m    fn eq(\u001b[0m\u001b[0m\u001b[38;5;9m&this\u001b[0m\u001b[0m, other: &UnitPromotions<'a>) -> bool {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m260\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m    fn eq(\u001b[0m\u001b[0m\u001b[38;5;10mthis: &TypeName\u001b[0m\u001b[0m, other: &UnitPromotions<'a>) -> bool {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a type, explicitly ignore the parameter name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m260\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    fn eq(\u001b[0m\u001b[0m\u001b[38;5;10m_: \u001b[0m\u001b[0m&this, other: &UnitPromotions<'a>) -> bool {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[38;5;10m++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"expected one of `:`, `@`, or `|`, found `)`","code":null,"level":"error","spans":[{"file_name":"src/mapunit/unit_turn_manager.rs","byte_start":3728,"byte_end":3729,"line_start":96,"line_end":96,"column_start":27,"column_end":28,"is_primary":true,"text":[{"text":"    fn heal_unit(&mut this) {","highlight_start":27,"highlight_end":28}],"label":"expected one of `:`, `@`, or `|`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"anonymous parameters are removed in the 2018 edition (see RFC 1685)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is a `self` type, give it a parameter name","code":null,"level":"help","spans":[{"file_name":"src/mapunit/unit_turn_manager.rs","byte_start":3719,"byte_end":3719,"line_start":96,"line_end":96,"column_start":18,"column_end":18,"is_primary":true,"text":[{"text":"    fn heal_unit(&mut this) {","highlight_start":18,"highlight_end":18}],"label":null,"suggested_replacement":"self: ","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if this is a parameter name, give it a type","code":null,"level":"help","spans":[{"file_name":"src/mapunit/unit_turn_manager.rs","byte_start":3719,"byte_end":3728,"line_start":96,"line_end":96,"column_start":18,"column_end":27,"is_primary":true,"text":[{"text":"    fn heal_unit(&mut this) {","highlight_start":18,"highlight_end":27}],"label":null,"suggested_replacement":"this: &mut TypeName","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null},{"message":"if this is a type, explicitly ignore the parameter name","code":null,"level":"help","spans":[{"file_name":"src/mapunit/unit_turn_manager.rs","byte_start":3719,"byte_end":3719,"line_start":96,"line_end":96,"column_start":18,"column_end":18,"is_primary":true,"text":[{"text":"    fn heal_unit(&mut this) {","highlight_start":18,"highlight_end":18}],"label":null,"suggested_replacement":"_: ","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: expected one of `:`, `@`, or `|`, found `)`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mapunit/unit_turn_manager.rs:96:27\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m96\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn heal_unit(&mut this) {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected one of `:`, `@`, or `|`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: anonymous parameters are removed in the 2018 edition (see RFC 1685)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a `self` type, give it a parameter name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m96\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    fn heal_unit(\u001b[0m\u001b[0m\u001b[38;5;10mself: \u001b[0m\u001b[0m&mut this) {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[38;5;10m+++++\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a parameter name, give it a type\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m96\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m    fn heal_unit(\u001b[0m\u001b[0m\u001b[38;5;9m&mut this\u001b[0m\u001b[0m) {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m96\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m    fn heal_unit(\u001b[0m\u001b[0m\u001b[38;5;10mthis: &mut TypeName\u001b[0m\u001b[0m) {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a type, explicitly ignore the parameter name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m96\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    fn heal_unit(\u001b[0m\u001b[0m\u001b[38;5;10m_: \u001b[0m\u001b[0m&mut this) {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[38;5;10m++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"expected one of `:`, `@`, or `|`, found `)`","code":null,"level":"error","spans":[{"file_name":"src/mapunit/unit_turn_manager.rs","byte_start":4001,"byte_end":4002,"line_start":106,"line_end":106,"column_start":35,"column_end":36,"is_primary":true,"text":[{"text":"    fn do_citadel_damage(&mut this) {","highlight_start":35,"highlight_end":36}],"label":"expected one of `:`, `@`, or `|`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"anonymous parameters are removed in the 2018 edition (see RFC 1685)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is a `self` type, give it a parameter name","code":null,"level":"help","spans":[{"file_name":"src/mapunit/unit_turn_manager.rs","byte_start":3992,"byte_end":3992,"line_start":106,"line_end":106,"column_start":26,"column_end":26,"is_primary":true,"text":[{"text":"    fn do_citadel_damage(&mut this) {","highlight_start":26,"highlight_end":26}],"label":null,"suggested_replacement":"self: ","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if this is a parameter name, give it a type","code":null,"level":"help","spans":[{"file_name":"src/mapunit/unit_turn_manager.rs","byte_start":3992,"byte_end":4001,"line_start":106,"line_end":106,"column_start":26,"column_end":35,"is_primary":true,"text":[{"text":"    fn do_citadel_damage(&mut this) {","highlight_start":26,"highlight_end":35}],"label":null,"suggested_replacement":"this: &mut TypeName","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null},{"message":"if this is a type, explicitly ignore the parameter name","code":null,"level":"help","spans":[{"file_name":"src/mapunit/unit_turn_manager.rs","byte_start":3992,"byte_end":3992,"line_start":106,"line_end":106,"column_start":26,"column_end":26,"is_primary":true,"text":[{"text":"    fn do_citadel_damage(&mut this) {","highlight_start":26,"highlight_end":26}],"label":null,"suggested_replacement":"_: ","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: expected one of `:`, `@`, or `|`, found `)`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mapunit/unit_turn_manager.rs:106:35\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m106\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn do_citadel_damage(&mut this) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected one of `:`, `@`, or `|`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: anonymous parameters are removed in the 2018 edition (see RFC 1685)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a `self` type, give it a parameter name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m106\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    fn do_citadel_damage(\u001b[0m\u001b[0m\u001b[38;5;10mself: \u001b[0m\u001b[0m&mut this) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[38;5;10m+++++\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a parameter name, give it a type\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m106\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m    fn do_citadel_damage(\u001b[0m\u001b[0m\u001b[38;5;9m&mut this\u001b[0m\u001b[0m) {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m106\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m    fn do_citadel_damage(\u001b[0m\u001b[0m\u001b[38;5;10mthis: &mut TypeName\u001b[0m\u001b[0m) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a type, explicitly ignore the parameter name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m106\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    fn do_citadel_damage(\u001b[0m\u001b[0m\u001b[38;5;10m_: \u001b[0m\u001b[0m&mut this) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[38;5;10m++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"expected one of `:`, `@`, or `|`, found `)`","code":null,"level":"error","spans":[{"file_name":"src/mapunit/unit_turn_manager.rs","byte_start":6646,"byte_end":6647,"line_start":174,"line_end":174,"column_start":35,"column_end":36,"is_primary":true,"text":[{"text":"    fn do_terrain_damage(&mut this) {","highlight_start":35,"highlight_end":36}],"label":"expected one of `:`, `@`, or `|`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"anonymous parameters are removed in the 2018 edition (see RFC 1685)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is a `self` type, give it a parameter name","code":null,"level":"help","spans":[{"file_name":"src/mapunit/unit_turn_manager.rs","byte_start":6637,"byte_end":6637,"line_start":174,"line_end":174,"column_start":26,"column_end":26,"is_primary":true,"text":[{"text":"    fn do_terrain_damage(&mut this) {","highlight_start":26,"highlight_end":26}],"label":null,"suggested_replacement":"self: ","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if this is a parameter name, give it a type","code":null,"level":"help","spans":[{"file_name":"src/mapunit/unit_turn_manager.rs","byte_start":6637,"byte_end":6646,"line_start":174,"line_end":174,"column_start":26,"column_end":35,"is_primary":true,"text":[{"text":"    fn do_terrain_damage(&mut this) {","highlight_start":26,"highlight_end":35}],"label":null,"suggested_replacement":"this: &mut TypeName","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null},{"message":"if this is a type, explicitly ignore the parameter name","code":null,"level":"help","spans":[{"file_name":"src/mapunit/unit_turn_manager.rs","byte_start":6637,"byte_end":6637,"line_start":174,"line_end":174,"column_start":26,"column_end":26,"is_primary":true,"text":[{"text":"    fn do_terrain_damage(&mut this) {","highlight_start":26,"highlight_end":26}],"label":null,"suggested_replacement":"_: ","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: expected one of `:`, `@`, or `|`, found `)`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mapunit/unit_turn_manager.rs:174:35\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m174\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn do_terrain_damage(&mut this) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected one of `:`, `@`, or `|`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: anonymous parameters are removed in the 2018 edition (see RFC 1685)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a `self` type, give it a parameter name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m174\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    fn do_terrain_damage(\u001b[0m\u001b[0m\u001b[38;5;10mself: \u001b[0m\u001b[0m&mut this) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[38;5;10m+++++\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a parameter name, give it a type\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m174\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m    fn do_terrain_damage(\u001b[0m\u001b[0m\u001b[38;5;9m&mut this\u001b[0m\u001b[0m) {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m174\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m    fn do_terrain_damage(\u001b[0m\u001b[0m\u001b[38;5;10mthis: &mut TypeName\u001b[0m\u001b[0m) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a type, explicitly ignore the parameter name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m174\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    fn do_terrain_damage(\u001b[0m\u001b[0m\u001b[38;5;10m_: \u001b[0m\u001b[0m&mut this) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[38;5;10m++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"expected one of `:`, `@`, or `|`, found `)`","code":null,"level":"error","spans":[{"file_name":"src/mapunit/unit_turn_manager.rs","byte_start":7602,"byte_end":7603,"line_start":202,"line_end":202,"column_start":32,"column_end":33,"is_primary":true,"text":[{"text":"    pub fn start_turn(&mut this) {","highlight_start":32,"highlight_end":33}],"label":"expected one of `:`, `@`, or `|`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"anonymous parameters are removed in the 2018 edition (see RFC 1685)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is a `self` type, give it a parameter name","code":null,"level":"help","spans":[{"file_name":"src/mapunit/unit_turn_manager.rs","byte_start":7593,"byte_end":7593,"line_start":202,"line_end":202,"column_start":23,"column_end":23,"is_primary":true,"text":[{"text":"    pub fn start_turn(&mut this) {","highlight_start":23,"highlight_end":23}],"label":null,"suggested_replacement":"self: ","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if this is a parameter name, give it a type","code":null,"level":"help","spans":[{"file_name":"src/mapunit/unit_turn_manager.rs","byte_start":7593,"byte_end":7602,"line_start":202,"line_end":202,"column_start":23,"column_end":32,"is_primary":true,"text":[{"text":"    pub fn start_turn(&mut this) {","highlight_start":23,"highlight_end":32}],"label":null,"suggested_replacement":"this: &mut TypeName","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null},{"message":"if this is a type, explicitly ignore the parameter name","code":null,"level":"help","spans":[{"file_name":"src/mapunit/unit_turn_manager.rs","byte_start":7593,"byte_end":7593,"line_start":202,"line_end":202,"column_start":23,"column_end":23,"is_primary":true,"text":[{"text":"    pub fn start_turn(&mut this) {","highlight_start":23,"highlight_end":23}],"label":null,"suggested_replacement":"_: ","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: expected one of `:`, `@`, or `|`, found `)`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/mapunit/unit_turn_manager.rs:202:32\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m202\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn start_turn(&mut this) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected one of `:`, `@`, or `|`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: anonymous parameters are removed in the 2018 edition (see RFC 1685)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a `self` type, give it a parameter name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m202\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub fn start_turn(\u001b[0m\u001b[0m\u001b[38;5;10mself: \u001b[0m\u001b[0m&mut this) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[38;5;10m+++++\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a parameter name, give it a type\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m202\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m    pub fn start_turn(\u001b[0m\u001b[0m\u001b[38;5;9m&mut this\u001b[0m\u001b[0m) {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m202\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m    pub fn start_turn(\u001b[0m\u001b[0m\u001b[38;5;10mthis: &mut TypeName\u001b[0m\u001b[0m) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a type, explicitly ignore the parameter name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m202\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub fn start_turn(\u001b[0m\u001b[0m\u001b[38;5;10m_: \u001b[0m\u001b[0m&mut this) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[38;5;10m++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"expected identifier, found keyword `const`","code":null,"level":"error","spans":[{"file_name":"src/metadata/game_settings.rs","byte_start":13902,"byte_end":13907,"line_start":445,"line_end":445,"column_start":9,"column_end":14,"is_primary":true,"text":[{"text":"    pub const ORIGINAL_FONT_SIZE: i32 = 16;","highlight_start":9,"highlight_end":14}],"label":"expected identifier, found keyword","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/metadata/game_settings.rs","byte_start":13846,"byte_end":13860,"line_start":443,"line_end":443,"column_start":12,"column_end":26,"is_primary":false,"text":[{"text":"pub struct FontFamilyData {","highlight_start":12,"highlight_end":26}],"label":"while parsing this struct","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: expected identifier, found keyword `const`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/metadata/game_settings.rs:445:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m443\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct FontFamilyData {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mwhile parsing this struct\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m444\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    /// The original font size\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m445\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub const ORIGINAL_FONT_SIZE: i32 = 16;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected identifier, found keyword\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"file not found for module `skins`","code":{"code":"E0583","explanation":"A file wasn't found for an out-of-line module.\n\nErroneous code example:\n\n```compile_fail,E0583\nmod file_that_doesnt_exist; // error: file not found for module\n\nfn main() {}\n```\n\nPlease be sure that a file corresponding to the module exists. If you\nwant to use a module named `file_that_doesnt_exist`, you need to have a file\nnamed `file_that_doesnt_exist.rs` or `file_that_doesnt_exist/mod.rs` in the\nsame directory.\n"},"level":"error","spans":[{"file_name":"src/models/mod.rs","byte_start":265,"byte_end":279,"line_start":15,"line_end":15,"column_start":1,"column_end":15,"is_primary":true,"text":[{"text":"pub mod skins;","highlight_start":1,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"to create the module `skins`, create file \"src/models/skins.rs\" or \"src/models/skins/mod.rs\"","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"if there is a `mod skins` elsewhere in the crate already, import it with `use crate::...` instead","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0583]\u001b[0m\u001b[0m\u001b[1m: file not found for module `skins`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/models/mod.rs:15:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub mod skins;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: to create the module `skins`, create file \"src/models/skins.rs\" or \"src/models/skins/mod.rs\"\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: if there is a `mod skins` elsewhere in the crate already, import it with `use crate::...` instead\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"file not found for module `tilesets`","code":{"code":"E0583","explanation":"A file wasn't found for an out-of-line module.\n\nErroneous code example:\n\n```compile_fail,E0583\nmod file_that_doesnt_exist; // error: file not found for module\n\nfn main() {}\n```\n\nPlease be sure that a file corresponding to the module exists. If you\nwant to use a module named `file_that_doesnt_exist`, you need to have a file\nnamed `file_that_doesnt_exist.rs` or `file_that_doesnt_exist/mod.rs` in the\nsame directory.\n"},"level":"error","spans":[{"file_name":"src/models/mod.rs","byte_start":295,"byte_end":312,"line_start":17,"line_end":17,"column_start":1,"column_end":18,"is_primary":true,"text":[{"text":"pub mod tilesets;","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"to create the module `tilesets`, create file \"src/models/tilesets.rs\" or \"src/models/tilesets/mod.rs\"","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"if there is a `mod tilesets` elsewhere in the crate already, import it with `use crate::...` instead","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0583]\u001b[0m\u001b[0m\u001b[1m: file not found for module `tilesets`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/models/mod.rs:17:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m17\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub mod tilesets;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: to create the module `tilesets`, create file \"src/models/tilesets.rs\" or \"src/models/tilesets/mod.rs\"\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: if there is a `mod tilesets` elsewhere in the crate already, import it with `use crate::...` instead\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"file not found for module `translations`","code":{"code":"E0583","explanation":"A file wasn't found for an out-of-line module.\n\nErroneous code example:\n\n```compile_fail,E0583\nmod file_that_doesnt_exist; // error: file not found for module\n\nfn main() {}\n```\n\nPlease be sure that a file corresponding to the module exists. If you\nwant to use a module named `file_that_doesnt_exist`, you need to have a file\nnamed `file_that_doesnt_exist.rs` or `file_that_doesnt_exist/mod.rs` in the\nsame directory.\n"},"level":"error","spans":[{"file_name":"src/models/mod.rs","byte_start":313,"byte_end":334,"line_start":18,"line_end":18,"column_start":1,"column_end":22,"is_primary":true,"text":[{"text":"pub mod translations;","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"to create the module `translations`, create file \"src/models/translations.rs\" or \"src/models/translations/mod.rs\"","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"if there is a `mod translations` elsewhere in the crate already, import it with `use crate::...` instead","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0583]\u001b[0m\u001b[0m\u001b[1m: file not found for module `translations`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/models/mod.rs:18:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m18\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub mod translations;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: to create the module `translations`, create file \"src/models/translations.rs\" or \"src/models/translations/mod.rs\"\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: if there is a `mod translations` elsewhere in the crate already, import it with `use crate::...` instead\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"file for module `endpoint_implementations` found at both \"src/multiplayer/endpoint_implementations.rs\" and \"src/multiplayer/endpoint_implementations/mod.rs\"","code":{"code":"E0761","explanation":"Multiple candidate files were found for an out-of-line module.\n\nErroneous code example:\n\n```ignore (Multiple source files are required for compile_fail.)\n// file: ambiguous_module/mod.rs\n\nfn foo() {}\n\n// file: ambiguous_module.rs\n\nfn foo() {}\n\n// file: lib.rs\n\nmod ambiguous_module; // error: file for module `ambiguous_module`\n                      // found at both ambiguous_module.rs and\n                      // ambiguous_module/mod.rs\n```\n\nPlease remove this ambiguity by deleting/renaming one of the candidate files.\n"},"level":"error","spans":[{"file_name":"src/multiplayer/mod.rs","byte_start":96,"byte_end":129,"line_start":6,"line_end":6,"column_start":1,"column_end":34,"is_primary":true,"text":[{"text":"pub mod endpoint_implementations;","highlight_start":1,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"delete or rename one of them to remove the ambiguity","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0761]\u001b[0m\u001b[0m\u001b[1m: file for module `endpoint_implementations` found at both \"src/multiplayer/endpoint_implementations.rs\" and \"src/multiplayer/endpoint_implementations/mod.rs\"\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/multiplayer/mod.rs:6:1\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m6\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub mod endpoint_implementations;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: delete or rename one of them to remove the ambiguity\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"expected parameter name, found `=`","code":null,"level":"error","spans":[{"file_name":"src/multiplayer/multiplayer_files.rs","byte_start":4126,"byte_end":4127,"line_start":131,"line_end":131,"column_start":93,"column_end":94,"is_primary":true,"text":[{"text":"    fn add_game_internal(&self, file_handle: &FileHandle, preview: Option<&GameInfoPreview> = None) -> Result<(), Box<dyn std::error::Error>> {","highlight_start":93,"highlight_end":94}],"label":"expected parameter name","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: expected parameter name, found `=`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/multiplayer/multiplayer_files.rs:131:93\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m131\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn add_game_internal(&self, file_handle: &FileHandle, preview: Option<&GameInfoPreview> = None) -> Result<(), Box<dyn std::error::Err\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                                                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected parameter name\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"expected one of `!`, `)`, `+`, `,`, or `::`, found `=`","code":null,"level":"error","spans":[{"file_name":"src/multiplayer/multiplayer_files.rs","byte_start":4126,"byte_end":4127,"line_start":131,"line_end":131,"column_start":93,"column_end":94,"is_primary":true,"text":[{"text":"    fn add_game_internal(&self, file_handle: &FileHandle, preview: Option<&GameInfoPreview> = None) -> Result<(), Box<dyn std::error::Error>> {","highlight_start":93,"highlight_end":94}],"label":"expected one of `!`, `)`, `+`, `,`, or `::`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"missing `,`","code":null,"level":"help","spans":[{"file_name":"src/multiplayer/multiplayer_files.rs","byte_start":4125,"byte_end":4125,"line_start":131,"line_end":131,"column_start":92,"column_end":92,"is_primary":true,"text":[{"text":"    fn add_game_internal(&self, file_handle: &FileHandle, preview: Option<&GameInfoPreview> = None) -> Result<(), Box<dyn std::error::Error>> {","highlight_start":92,"highlight_end":92}],"label":null,"suggested_replacement":",","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: expected one of `!`, `)`, `+`, `,`, or `::`, found `=`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/multiplayer/multiplayer_files.rs:131:93\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m131\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0mileHandle, preview: Option<&GameInfoPreview> = None) -> Result<(), Box<dyn std::error::Error>> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected one of `!`, `)`, `+`, `,`, or `::`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: missing `,`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"file not found for module `suppresion`","code":{"code":"E0583","explanation":"A file wasn't found for an out-of-line module.\n\nErroneous code example:\n\n```compile_fail,E0583\nmod file_that_doesnt_exist; // error: file not found for module\n\nfn main() {}\n```\n\nPlease be sure that a file corresponding to the module exists. If you\nwant to use a module named `file_that_doesnt_exist`, you need to have a file\nnamed `file_that_doesnt_exist.rs` or `file_that_doesnt_exist/mod.rs` in the\nsame directory.\n"},"level":"error","spans":[{"file_name":"src/ruleset/validation/mod.rs","byte_start":82,"byte_end":101,"line_start":4,"line_end":4,"column_start":1,"column_end":20,"is_primary":true,"text":[{"text":"pub mod suppresion;","highlight_start":1,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"to create the module `suppresion`, create file \"src/ruleset/validation/suppresion.rs\" or \"src/ruleset/validation/suppresion/mod.rs\"","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"if there is a `mod suppresion` elsewhere in the crate already, import it with `use crate::...` instead","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0583]\u001b[0m\u001b[0m\u001b[1m: file not found for module `suppresion`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/ruleset/validation/mod.rs:4:1\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub mod suppresion;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: to create the module `suppresion`, create file \"src/ruleset/validation/suppresion.rs\" or \"src/ruleset/validation/suppresion/mod.rs\"\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: if there is a `mod suppresion` elsewhere in the crate already, import it with `use crate::...` instead\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"expected one of `:`, `@`, or `|`, found `)`","code":null,"level":"error","spans":[{"file_name":"src/ruleset/policy_branch.rs","byte_start":2264,"byte_end":2265,"line_start":86,"line_end":86,"column_start":32,"column_end":33,"is_primary":true,"text":[{"text":"    fn get_unique_objects(&this) -> &[Unique] {","highlight_start":32,"highlight_end":33}],"label":"expected one of `:`, `@`, or `|`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"anonymous parameters are removed in the 2018 edition (see RFC 1685)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is a `self` type, give it a parameter name","code":null,"level":"help","spans":[{"file_name":"src/ruleset/policy_branch.rs","byte_start":2259,"byte_end":2259,"line_start":86,"line_end":86,"column_start":27,"column_end":27,"is_primary":true,"text":[{"text":"    fn get_unique_objects(&this) -> &[Unique] {","highlight_start":27,"highlight_end":27}],"label":null,"suggested_replacement":"self: ","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if this is a parameter name, give it a type","code":null,"level":"help","spans":[{"file_name":"src/ruleset/policy_branch.rs","byte_start":2259,"byte_end":2264,"line_start":86,"line_end":86,"column_start":27,"column_end":32,"is_primary":true,"text":[{"text":"    fn get_unique_objects(&this) -> &[Unique] {","highlight_start":27,"highlight_end":32}],"label":null,"suggested_replacement":"this: &TypeName","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null},{"message":"if this is a type, explicitly ignore the parameter name","code":null,"level":"help","spans":[{"file_name":"src/ruleset/policy_branch.rs","byte_start":2259,"byte_end":2259,"line_start":86,"line_end":86,"column_start":27,"column_end":27,"is_primary":true,"text":[{"text":"    fn get_unique_objects(&this) -> &[Unique] {","highlight_start":27,"highlight_end":27}],"label":null,"suggested_replacement":"_: ","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: expected one of `:`, `@`, or `|`, found `)`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/ruleset/policy_branch.rs:86:32\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m86\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn get_unique_objects(&this) -> &[Unique] {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected one of `:`, `@`, or `|`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: anonymous parameters are removed in the 2018 edition (see RFC 1685)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a `self` type, give it a parameter name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m86\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    fn get_unique_objects(\u001b[0m\u001b[0m\u001b[38;5;10mself: \u001b[0m\u001b[0m&this) -> &[Unique] {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[38;5;10m+++++\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a parameter name, give it a type\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m86\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m    fn get_unique_objects(\u001b[0m\u001b[0m\u001b[38;5;9m&this\u001b[0m\u001b[0m) -> &[Unique] {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m86\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m    fn get_unique_objects(\u001b[0m\u001b[0m\u001b[38;5;10mthis: &TypeName\u001b[0m\u001b[0m) -> &[Unique] {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a type, explicitly ignore the parameter name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m86\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    fn get_unique_objects(\u001b[0m\u001b[0m\u001b[38;5;10m_: \u001b[0m\u001b[0m&this) -> &[Unique] {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[38;5;10m++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"expected one of `:`, `@`, or `|`, found `)`","code":null,"level":"error","spans":[{"file_name":"src/ruleset/policy_branch.rs","byte_start":2344,"byte_end":2345,"line_start":90,"line_end":90,"column_start":28,"column_end":29,"is_primary":true,"text":[{"text":"    fn get_unique_map(&this) -> &UniqueMap {","highlight_start":28,"highlight_end":29}],"label":"expected one of `:`, `@`, or `|`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"anonymous parameters are removed in the 2018 edition (see RFC 1685)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is a `self` type, give it a parameter name","code":null,"level":"help","spans":[{"file_name":"src/ruleset/policy_branch.rs","byte_start":2339,"byte_end":2339,"line_start":90,"line_end":90,"column_start":23,"column_end":23,"is_primary":true,"text":[{"text":"    fn get_unique_map(&this) -> &UniqueMap {","highlight_start":23,"highlight_end":23}],"label":null,"suggested_replacement":"self: ","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if this is a parameter name, give it a type","code":null,"level":"help","spans":[{"file_name":"src/ruleset/policy_branch.rs","byte_start":2339,"byte_end":2344,"line_start":90,"line_end":90,"column_start":23,"column_end":28,"is_primary":true,"text":[{"text":"    fn get_unique_map(&this) -> &UniqueMap {","highlight_start":23,"highlight_end":28}],"label":null,"suggested_replacement":"this: &TypeName","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null},{"message":"if this is a type, explicitly ignore the parameter name","code":null,"level":"help","spans":[{"file_name":"src/ruleset/policy_branch.rs","byte_start":2339,"byte_end":2339,"line_start":90,"line_end":90,"column_start":23,"column_end":23,"is_primary":true,"text":[{"text":"    fn get_unique_map(&this) -> &UniqueMap {","highlight_start":23,"highlight_end":23}],"label":null,"suggested_replacement":"_: ","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: expected one of `:`, `@`, or `|`, found `)`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/ruleset/policy_branch.rs:90:28\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m90\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn get_unique_map(&this) -> &UniqueMap {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected one of `:`, `@`, or `|`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: anonymous parameters are removed in the 2018 edition (see RFC 1685)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a `self` type, give it a parameter name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m90\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    fn get_unique_map(\u001b[0m\u001b[0m\u001b[38;5;10mself: \u001b[0m\u001b[0m&this) -> &UniqueMap {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[38;5;10m+++++\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a parameter name, give it a type\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m90\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m    fn get_unique_map(\u001b[0m\u001b[0m\u001b[38;5;9m&this\u001b[0m\u001b[0m) -> &UniqueMap {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m90\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m    fn get_unique_map(\u001b[0m\u001b[0m\u001b[38;5;10mthis: &TypeName\u001b[0m\u001b[0m) -> &UniqueMap {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a type, explicitly ignore the parameter name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m90\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    fn get_unique_map(\u001b[0m\u001b[0m\u001b[38;5;10m_: \u001b[0m\u001b[0m&this) -> &UniqueMap {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[38;5;10m++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"expected one of `:`, `@`, or `|`, found `)`","code":null,"level":"error","spans":[{"file_name":"src/ruleset/policy_branch.rs","byte_start":2416,"byte_end":2417,"line_start":94,"line_end":94,"column_start":23,"column_end":24,"is_primary":true,"text":[{"text":"    fn make_link(&this) -> String {","highlight_start":23,"highlight_end":24}],"label":"expected one of `:`, `@`, or `|`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"anonymous parameters are removed in the 2018 edition (see RFC 1685)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is a `self` type, give it a parameter name","code":null,"level":"help","spans":[{"file_name":"src/ruleset/policy_branch.rs","byte_start":2411,"byte_end":2411,"line_start":94,"line_end":94,"column_start":18,"column_end":18,"is_primary":true,"text":[{"text":"    fn make_link(&this) -> String {","highlight_start":18,"highlight_end":18}],"label":null,"suggested_replacement":"self: ","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if this is a parameter name, give it a type","code":null,"level":"help","spans":[{"file_name":"src/ruleset/policy_branch.rs","byte_start":2411,"byte_end":2416,"line_start":94,"line_end":94,"column_start":18,"column_end":23,"is_primary":true,"text":[{"text":"    fn make_link(&this) -> String {","highlight_start":18,"highlight_end":23}],"label":null,"suggested_replacement":"this: &TypeName","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null},{"message":"if this is a type, explicitly ignore the parameter name","code":null,"level":"help","spans":[{"file_name":"src/ruleset/policy_branch.rs","byte_start":2411,"byte_end":2411,"line_start":94,"line_end":94,"column_start":18,"column_end":18,"is_primary":true,"text":[{"text":"    fn make_link(&this) -> String {","highlight_start":18,"highlight_end":18}],"label":null,"suggested_replacement":"_: ","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: expected one of `:`, `@`, or `|`, found `)`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/ruleset/policy_branch.rs:94:23\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m94\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn make_link(&this) -> String {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected one of `:`, `@`, or `|`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: anonymous parameters are removed in the 2018 edition (see RFC 1685)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a `self` type, give it a parameter name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m94\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    fn make_link(\u001b[0m\u001b[0m\u001b[38;5;10mself: \u001b[0m\u001b[0m&this) -> String {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[38;5;10m+++++\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a parameter name, give it a type\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m94\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m    fn make_link(\u001b[0m\u001b[0m\u001b[38;5;9m&this\u001b[0m\u001b[0m) -> String {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m94\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m    fn make_link(\u001b[0m\u001b[0m\u001b[38;5;10mthis: &TypeName\u001b[0m\u001b[0m) -> String {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a type, explicitly ignore the parameter name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m94\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    fn make_link(\u001b[0m\u001b[0m\u001b[38;5;10m_: \u001b[0m\u001b[0m&this) -> String {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[38;5;10m++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"expected one of `:`, `@`, or `|`, found `,`","code":null,"level":"error","spans":[{"file_name":"src/ruleset/policy_branch.rs","byte_start":2510,"byte_end":2511,"line_start":98,"line_end":98,"column_start":28,"column_end":29,"is_primary":true,"text":[{"text":"    fn get_sort_group(&this, ruleset: &Ruleset) -> i32 {","highlight_start":28,"highlight_end":29}],"label":"expected one of `:`, `@`, or `|`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"anonymous parameters are removed in the 2018 edition (see RFC 1685)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is a `self` type, give it a parameter name","code":null,"level":"help","spans":[{"file_name":"src/ruleset/policy_branch.rs","byte_start":2505,"byte_end":2505,"line_start":98,"line_end":98,"column_start":23,"column_end":23,"is_primary":true,"text":[{"text":"    fn get_sort_group(&this, ruleset: &Ruleset) -> i32 {","highlight_start":23,"highlight_end":23}],"label":null,"suggested_replacement":"self: ","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if this is a parameter name, give it a type","code":null,"level":"help","spans":[{"file_name":"src/ruleset/policy_branch.rs","byte_start":2505,"byte_end":2510,"line_start":98,"line_end":98,"column_start":23,"column_end":28,"is_primary":true,"text":[{"text":"    fn get_sort_group(&this, ruleset: &Ruleset) -> i32 {","highlight_start":23,"highlight_end":28}],"label":null,"suggested_replacement":"this: &TypeName","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null},{"message":"if this is a type, explicitly ignore the parameter name","code":null,"level":"help","spans":[{"file_name":"src/ruleset/policy_branch.rs","byte_start":2505,"byte_end":2505,"line_start":98,"line_end":98,"column_start":23,"column_end":23,"is_primary":true,"text":[{"text":"    fn get_sort_group(&this, ruleset: &Ruleset) -> i32 {","highlight_start":23,"highlight_end":23}],"label":null,"suggested_replacement":"_: ","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: expected one of `:`, `@`, or `|`, found `,`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/ruleset/policy_branch.rs:98:28\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m98\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn get_sort_group(&this, ruleset: &Ruleset) -> i32 {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected one of `:`, `@`, or `|`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: anonymous parameters are removed in the 2018 edition (see RFC 1685)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a `self` type, give it a parameter name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m98\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    fn get_sort_group(\u001b[0m\u001b[0m\u001b[38;5;10mself: \u001b[0m\u001b[0m&this, ruleset: &Ruleset) -> i32 {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[38;5;10m+++++\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a parameter name, give it a type\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m98\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m    fn get_sort_group(\u001b[0m\u001b[0m\u001b[38;5;9m&this\u001b[0m\u001b[0m, ruleset: &Ruleset) -> i32 {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m98\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m    fn get_sort_group(\u001b[0m\u001b[0m\u001b[38;5;10mthis: &TypeName\u001b[0m\u001b[0m, ruleset: &Ruleset) -> i32 {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a type, explicitly ignore the parameter name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m98\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    fn get_sort_group(\u001b[0m\u001b[0m\u001b[38;5;10m_: \u001b[0m\u001b[0m&this, ruleset: &Ruleset) -> i32 {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[38;5;10m++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"expected one of `:`, `@`, or `|`, found `,`","code":null,"level":"error","spans":[{"file_name":"src/ruleset/policy_branch.rs","byte_start":2906,"byte_end":2907,"line_start":108,"line_end":108,"column_start":40,"column_end":41,"is_primary":true,"text":[{"text":"    fn get_civilopedia_text_lines(&this, ruleset: &Ruleset) -> Vec<FormattedLine> {","highlight_start":40,"highlight_end":41}],"label":"expected one of `:`, `@`, or `|`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"anonymous parameters are removed in the 2018 edition (see RFC 1685)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is a `self` type, give it a parameter name","code":null,"level":"help","spans":[{"file_name":"src/ruleset/policy_branch.rs","byte_start":2901,"byte_end":2901,"line_start":108,"line_end":108,"column_start":35,"column_end":35,"is_primary":true,"text":[{"text":"    fn get_civilopedia_text_lines(&this, ruleset: &Ruleset) -> Vec<FormattedLine> {","highlight_start":35,"highlight_end":35}],"label":null,"suggested_replacement":"self: ","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if this is a parameter name, give it a type","code":null,"level":"help","spans":[{"file_name":"src/ruleset/policy_branch.rs","byte_start":2901,"byte_end":2906,"line_start":108,"line_end":108,"column_start":35,"column_end":40,"is_primary":true,"text":[{"text":"    fn get_civilopedia_text_lines(&this, ruleset: &Ruleset) -> Vec<FormattedLine> {","highlight_start":35,"highlight_end":40}],"label":null,"suggested_replacement":"this: &TypeName","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null},{"message":"if this is a type, explicitly ignore the parameter name","code":null,"level":"help","spans":[{"file_name":"src/ruleset/policy_branch.rs","byte_start":2901,"byte_end":2901,"line_start":108,"line_end":108,"column_start":35,"column_end":35,"is_primary":true,"text":[{"text":"    fn get_civilopedia_text_lines(&this, ruleset: &Ruleset) -> Vec<FormattedLine> {","highlight_start":35,"highlight_end":35}],"label":null,"suggested_replacement":"_: ","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: expected one of `:`, `@`, or `|`, found `,`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/ruleset/policy_branch.rs:108:40\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m108\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn get_civilopedia_text_lines(&this, ruleset: &Ruleset) -> Vec<FormattedLine> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected one of `:`, `@`, or `|`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: anonymous parameters are removed in the 2018 edition (see RFC 1685)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a `self` type, give it a parameter name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m108\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    fn get_civilopedia_text_lines(\u001b[0m\u001b[0m\u001b[38;5;10mself: \u001b[0m\u001b[0m&this, ruleset: &Ruleset) -> Vec<FormattedLine> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                   \u001b[0m\u001b[0m\u001b[38;5;10m+++++\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a parameter name, give it a type\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m108\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m    fn get_civilopedia_text_lines(\u001b[0m\u001b[0m\u001b[38;5;9m&this\u001b[0m\u001b[0m, ruleset: &Ruleset) -> Vec<FormattedLine> {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m108\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m    fn get_civilopedia_text_lines(\u001b[0m\u001b[0m\u001b[38;5;10mthis: &TypeName\u001b[0m\u001b[0m, ruleset: &Ruleset) -> Vec<FormattedLine> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a type, explicitly ignore the parameter name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m108\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    fn get_civilopedia_text_lines(\u001b[0m\u001b[0m\u001b[38;5;10m_: \u001b[0m\u001b[0m&this, ruleset: &Ruleset) -> Vec<FormattedLine> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                   \u001b[0m\u001b[0m\u001b[38;5;10m++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"expected one of `:`, `@`, or `|`, found `)`","code":null,"level":"error","spans":[{"file_name":"src/ruleset/policy_branch.rs","byte_start":4136,"byte_end":4137,"line_start":151,"line_end":151,"column_start":31,"column_end":32,"is_primary":true,"text":[{"text":"    fn get_unique_target(&this) -> UniqueTarget {","highlight_start":31,"highlight_end":32}],"label":"expected one of `:`, `@`, or `|`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"anonymous parameters are removed in the 2018 edition (see RFC 1685)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is a `self` type, give it a parameter name","code":null,"level":"help","spans":[{"file_name":"src/ruleset/policy_branch.rs","byte_start":4131,"byte_end":4131,"line_start":151,"line_end":151,"column_start":26,"column_end":26,"is_primary":true,"text":[{"text":"    fn get_unique_target(&this) -> UniqueTarget {","highlight_start":26,"highlight_end":26}],"label":null,"suggested_replacement":"self: ","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if this is a parameter name, give it a type","code":null,"level":"help","spans":[{"file_name":"src/ruleset/policy_branch.rs","byte_start":4131,"byte_end":4136,"line_start":151,"line_end":151,"column_start":26,"column_end":31,"is_primary":true,"text":[{"text":"    fn get_unique_target(&this) -> UniqueTarget {","highlight_start":26,"highlight_end":31}],"label":null,"suggested_replacement":"this: &TypeName","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null},{"message":"if this is a type, explicitly ignore the parameter name","code":null,"level":"help","spans":[{"file_name":"src/ruleset/policy_branch.rs","byte_start":4131,"byte_end":4131,"line_start":151,"line_end":151,"column_start":26,"column_end":26,"is_primary":true,"text":[{"text":"    fn get_unique_target(&this) -> UniqueTarget {","highlight_start":26,"highlight_end":26}],"label":null,"suggested_replacement":"_: ","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: expected one of `:`, `@`, or `|`, found `)`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/ruleset/policy_branch.rs:151:31\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m151\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn get_unique_target(&this) -> UniqueTarget {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected one of `:`, `@`, or `|`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: anonymous parameters are removed in the 2018 edition (see RFC 1685)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a `self` type, give it a parameter name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m151\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    fn get_unique_target(\u001b[0m\u001b[0m\u001b[38;5;10mself: \u001b[0m\u001b[0m&this) -> UniqueTarget {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[38;5;10m+++++\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a parameter name, give it a type\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m151\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m    fn get_unique_target(\u001b[0m\u001b[0m\u001b[38;5;9m&this\u001b[0m\u001b[0m) -> UniqueTarget {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m151\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m    fn get_unique_target(\u001b[0m\u001b[0m\u001b[38;5;10mthis: &TypeName\u001b[0m\u001b[0m) -> UniqueTarget {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a type, explicitly ignore the parameter name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m151\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    fn get_unique_target(\u001b[0m\u001b[0m\u001b[38;5;10m_: \u001b[0m\u001b[0m&this) -> UniqueTarget {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[38;5;10m++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"expected one of `:`, `@`, or `|`, found `,`","code":null,"level":"error","spans":[{"file_name":"src/ruleset/policy_branch.rs","byte_start":4247,"byte_end":4248,"line_start":157,"line_end":157,"column_start":17,"column_end":18,"is_primary":true,"text":[{"text":"    fn fmt(&this, f: &mut fmt::Formatter<'_>) -> fmt::Result {","highlight_start":17,"highlight_end":18}],"label":"expected one of `:`, `@`, or `|`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"anonymous parameters are removed in the 2018 edition (see RFC 1685)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is a `self` type, give it a parameter name","code":null,"level":"help","spans":[{"file_name":"src/ruleset/policy_branch.rs","byte_start":4242,"byte_end":4242,"line_start":157,"line_end":157,"column_start":12,"column_end":12,"is_primary":true,"text":[{"text":"    fn fmt(&this, f: &mut fmt::Formatter<'_>) -> fmt::Result {","highlight_start":12,"highlight_end":12}],"label":null,"suggested_replacement":"self: ","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if this is a parameter name, give it a type","code":null,"level":"help","spans":[{"file_name":"src/ruleset/policy_branch.rs","byte_start":4242,"byte_end":4247,"line_start":157,"line_end":157,"column_start":12,"column_end":17,"is_primary":true,"text":[{"text":"    fn fmt(&this, f: &mut fmt::Formatter<'_>) -> fmt::Result {","highlight_start":12,"highlight_end":17}],"label":null,"suggested_replacement":"this: &TypeName","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null},{"message":"if this is a type, explicitly ignore the parameter name","code":null,"level":"help","spans":[{"file_name":"src/ruleset/policy_branch.rs","byte_start":4242,"byte_end":4242,"line_start":157,"line_end":157,"column_start":12,"column_end":12,"is_primary":true,"text":[{"text":"    fn fmt(&this, f: &mut fmt::Formatter<'_>) -> fmt::Result {","highlight_start":12,"highlight_end":12}],"label":null,"suggested_replacement":"_: ","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: expected one of `:`, `@`, or `|`, found `,`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/ruleset/policy_branch.rs:157:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m157\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn fmt(&this, f: &mut fmt::Formatter<'_>) -> fmt::Result {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected one of `:`, `@`, or `|`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: anonymous parameters are removed in the 2018 edition (see RFC 1685)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a `self` type, give it a parameter name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m157\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    fn fmt(\u001b[0m\u001b[0m\u001b[38;5;10mself: \u001b[0m\u001b[0m&this, f: &mut fmt::Formatter<'_>) -> fmt::Result {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[38;5;10m+++++\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a parameter name, give it a type\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m157\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m    fn fmt(\u001b[0m\u001b[0m\u001b[38;5;9m&this\u001b[0m\u001b[0m, f: &mut fmt::Formatter<'_>) -> fmt::Result {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m157\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m    fn fmt(\u001b[0m\u001b[0m\u001b[38;5;10mthis: &TypeName\u001b[0m\u001b[0m, f: &mut fmt::Formatter<'_>) -> fmt::Result {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a type, explicitly ignore the parameter name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m157\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    fn fmt(\u001b[0m\u001b[0m\u001b[38;5;10m_: \u001b[0m\u001b[0m&this, f: &mut fmt::Formatter<'_>) -> fmt::Result {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[38;5;10m++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"mismatched closing delimiter: `)`","code":null,"level":"error","spans":[{"file_name":"src/simulation/simulation.rs","byte_start":20849,"byte_end":20850,"line_start":573,"line_end":573,"column_start":89,"column_end":90,"is_primary":true,"text":[{"text":"                                            + t * (-0.82215223 + t * 0.17087277))))))))))","highlight_start":89,"highlight_end":90}],"label":"mismatched closing delimiter","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/simulation/simulation.rs","byte_start":20319,"byte_end":20320,"line_start":561,"line_end":561,"column_start":34,"column_end":35,"is_primary":true,"text":[{"text":"    fn erf(&self, x: f64) -> f64 {","highlight_start":34,"highlight_end":35}],"label":"unclosed delimiter","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: mismatched closing delimiter: `)`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/simulation/simulation.rs:561:34\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m561\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn erf(&self, x: f64) -> f64 {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9munclosed delimiter\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m573\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                            + t * (-0.82215223 + t * 0.17087277))))))))))\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                                                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmismatched closing delimiter\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unexpected closing delimiter: `}`","code":null,"level":"error","spans":[{"file_name":"src/simulation/simulation.rs","byte_start":20849,"byte_end":20849,"line_start":573,"line_end":573,"column_start":89,"column_end":89,"is_primary":false,"text":[{"text":"                                            + t * (-0.82215223 + t * 0.17087277))))))))))","highlight_start":89,"highlight_end":89}],"label":"missing open `(` for this delimiter","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/simulation/simulation.rs","byte_start":20970,"byte_end":20971,"line_start":581,"line_end":581,"column_start":1,"column_end":2,"is_primary":true,"text":[{"text":"}","highlight_start":1,"highlight_end":2}],"label":"unexpected closing delimiter","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: unexpected closing delimiter: `}`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/simulation/simulation.rs:581:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m573\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                            + t * (-0.82215223 + t * 0.17087277))))))))))\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                                                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mmissing open `(` for this delimiter\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m581\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9munexpected closing delimiter\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"aborting due to 89 previous errors","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to 89 previous errors\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"Some errors have detailed explanations: E0583, E0761.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mSome errors have detailed explanations: E0583, E0761.\u001b[0m\n"}
{"$message_type":"diagnostic","message":"For more information about an error, try `rustc --explain E0583`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mFor more information about an error, try `rustc --explain E0583`.\u001b[0m\n"}
